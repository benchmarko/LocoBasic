{"version":3,"file":"locoVmWorker.js","sources":["../src/vm/VmWorker.ts"],"sourcesContent":["import type { MessageFromWorker, MessageToWorker } from \"../Interfaces\";\n\ninterface NodeWorkerThreads {\n    parentPort: {\n        postMessage: (message: MessageFromWorker) => void\n        on: (event: string, listener: (data: MessageToWorker) => void) => void;\n    }\n}\n\ndeclare function require(name: string): NodeWorkerThreads;\n\nexport const workerFn = (parentPort?: NodeWorkerThreads[\"parentPort\"]) => {\n\n    const postMessage = (message: MessageFromWorker) => {\n        (parentPort || self).postMessage(message);\n    }\n\n    const CommaOpChar = \"\\u2192\"; // Unicode arrow right\n    const TabOpChar = \"\\u21d2\"; // Unicode double arrow right\n\n    const cpcColors = [ // browser\n        \"#000000\", //  0 Black\n        \"#000080\", //  1 Blue\n        \"#0000FF\", //  2 Bright Blue\n        \"#800000\", //  3 Red\n        \"#800080\", //  4 Magenta\n        \"#8000FF\", //  5 Mauve\n        \"#FF0000\", //  6 Bright Red\n        \"#FF0080\", //  7 Purple\n        \"#FF00FF\", //  8 Bright Magenta\n        \"#008000\", //  9 Green\n        \"#008080\", // 10 Cyan\n        \"#0080FF\", // 11 Sky Blue\n        \"#808000\", // 12 Yellow\n        \"#808080\", // 13 White\n        \"#8080FF\", // 14 Pastel Blue\n        \"#FF8000\", // 15 Orange\n        \"#FF8080\", // 16 Pink\n        \"#FF80FF\", // 17 Pastel Magenta\n        \"#00FF00\", // 18 Bright Green\n        \"#00FF80\", // 19 Sea Green\n        \"#00FFFF\", // 20 Bright Cyan\n        \"#80FF00\", // 21 Lime\n        \"#80FF80\", // 22 Pastel Green\n        \"#80FFFF\", // 23 Pastel Cyan\n        \"#FFFF00\", // 24 Bright Yellow\n        \"#FFFF80\", // 25 Pastel Yellow\n        \"#FFFFFF\", // 26 Bright White\n        \"#808080\", // 27 White (same as 13)\n        \"#FF00FF\", // 28 Bright Magenta (same as 8)\n        \"#FFFF80\", // 29 Pastel Yellow (same as 25)\n        \"#000080\", // 30 Blue (same as 1)\n        \"#00FF80\" //  31 Sea Green (same as 19)\n    ];\n\n    // Color codes for terminal (foreground). `\\x1b[${code + add}m`, e.g. Navy: pen: \"\\x1b[34m\" or paper: \"\\x1b[44m\"\n    const ansiColorCodes = [\n        30, //  0 Black\n        34, //  1 Blue\n        94, //  2 Bright Blue\n        31, //  3 Red\n        35, //  4 Magenta (Purple?)\n        35, //  5 Mauve ???\n        91, //  6 Bright Red\n        35, //  7 Purple\n        95, //  8 Bright Magenta ?\n        32, //  9 Green\n        36, // 10 Cyan\n        94, // 11 Sky Blue ?\n        33, // 12 Yellow\n        37, // 13 White\n        94, // 14 Pastel Blue ?\n        91, // 15 Orange ?\n        95, // 16 Pink (Bright Magenta?)\n        95, // 17 Pastel Magenta?\n        92, // 18 Bright Green\n        92, // 19 Sea Green\n        96, // 20 Bright Cyan\n        96, // 21 Lime ?\n        92, // 22 Pastel Green (Bright Green)\n        96, // 23 Pastel Cyan ?\n        93, // 24 Bright Yellow\n        93, // 25 Pastel Yellow\n        37, // 26 Bright White\n        37, // 27 White (same as 13)\n        95, // 28 Bright Magenta (same as 8)\n        93, // 29 Pastel Yellow (same as 25)\n        34, // 30 Blue (same as 1)\n        92 //  31 Sea Green (same as 19)\n    ];\n\n    const defaultColorsForPens: number[] = [\n        1, 24, 20, 6, 26, 0, 2, 8, 10, 12, 14, 16, 18, 22, 1, 16, 1\n    ];\n\n    const deleteAllItems = (items: Record<string, unknown>): void => {\n        Object.keys(items).forEach(key => delete items[key]);\n    };\n\n    const strokeWidthForMode: number[] = [4, 2, 1, 1];\n\n    const getTagInSvg = (content: string, strokeWidth: string, backgroundColor: string) => {\n        const backgroundColorStr = backgroundColor !== \"\" ? ` style=\"background-color:${backgroundColor}\"` : '';\n        return `<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 640 400\" shape-rendering=\"optimizeSpeed\" stroke=\"currentColor\" stroke-width=\"${strokeWidth}\"${backgroundColorStr}>\n${content}\n</svg>\n`;\n    };\n\n    const vmRsx = {\n        _pitch: 1,\n\n        resetRsx: () => {\n            vmRsx._pitch = 1;\n        },\n\n        rsxDate: async (args: (number | string)[]) => {\n            const date = new Date();\n            const dayOfWeek = (date.getDay() + 1) % 7;\n            const day = date.getDate();\n            const month = date.getMonth() + 1;\n            const year = date.getFullYear() % 100;\n            const dateStr = `${String(dayOfWeek).padStart(2, '0')} ${String(day).padStart(2, '0')} ${String(month).padStart(2, '0')} ${String(year).padStart(2, '0')}`;\n            args[0] = dateStr;\n            return Promise.resolve(args);\n        },\n        rsxPitch: (args: (number | string)[]) => {\n            vmRsx._pitch = (args[0] as number) / 10;\n        },\n\n        rsxSay: (args: (number | string)[]) => {\n            const message = args[0] as string;\n            postMessage({ type: 'speak', message, pitch: vmRsx._pitch });\n        },\n\n        rsxTime: async (args: (number | string)[]) => {\n            const date = new Date();\n            const hours = date.getHours();\n            const minutes = date.getMinutes();\n            const seconds = date.getSeconds();\n            const timeStr = `${String(hours).padStart(2, '0')} ${String(minutes).padStart(2, '0')} ${String(seconds).padStart(2, '0')}`;\n            args[0] = timeStr;\n            return Promise.resolve(args);\n        }\n    };\n\n    const vmGra = {\n        _backgroundColor: \"\",\n        _colorsForPens: [...defaultColorsForPens],\n        _currGraphicsPen: -1,\n        _currMode: 1,\n        _originX: 0,\n        _originY: 0,\n        _graphicsBuffer: [] as string[],\n        _graphicsPathBuffer: [] as string[],\n        _graphicsX: 0,\n        _graphicsY: 0,\n        _outputGraphicsIndex: -1,\n\n        resetGra: () => {\n            vmGra._colorsForPens.splice(0, vmGra._colorsForPens.length, ...defaultColorsForPens);\n            vmGra._backgroundColor = \"\";\n            vmGra.cls();\n        },\n\n        addGraphicsElement(element: string): void {\n            vmGra.setOutputGraphicsIndex();\n            vmGra.flushGraphicsPath(); // maybe a path is open\n            vmGra._graphicsBuffer.push(element);\n        },\n\n        cls: (): void => {\n            vmGra._graphicsBuffer.length = 0;\n            vmGra._graphicsPathBuffer.length = 0;\n            vmGra._currGraphicsPen = -1;\n            vmGra._graphicsX = 0;\n            vmGra._graphicsY = 0;\n            vmGra._outputGraphicsIndex = -1;\n        },\n\n        // type: M | m | P | p | L | l\n        drawMovePlot: (type: string, x: number, y: number, pen?: number): void => {\n            vmGra.setOutputGraphicsIndex();\n            if (pen !== undefined) {\n                vmGra.graphicsPen(pen);\n            }\n            x = Math.round(x);\n            y = Math.round(y);\n\n            if (!vmGra._graphicsPathBuffer.length && type !== \"M\" && type !== \"P\") { // path must start with an absolute move\n                vmGra._graphicsPathBuffer.push(`M${vmGra._graphicsX + vmGra._originX} ${399 - vmGra._graphicsY - vmGra._originY}`);\n            }\n\n            const isAbsolute = type === type.toUpperCase();\n            if (isAbsolute) {\n                vmGra._graphicsX = x;\n                vmGra._graphicsY = y;\n                x = vmGra._graphicsX + vmGra._originX;\n                y = 399 - vmGra._graphicsY - vmGra._originY;\n            } else {\n                vmGra._graphicsX += x;\n                vmGra._graphicsY += y;\n                y = -y;\n            }\n\n            const svgPathCmd = (type === \"P\" || type === \"p\")\n                ? `${isAbsolute ? \"M\" : \"m\"}${x} ${y}h1v1h-1v-1`\n                : `${type}${x} ${y}`;\n\n            vmGra._graphicsPathBuffer.push(svgPathCmd);\n        },\n\n        flushGraphicsPath(): void {\n            if (vmGra._graphicsPathBuffer.length) {\n                const strokeStr = this._currGraphicsPen >= 0 ? `stroke=\"${vmGra.getRgbColorStringForPen(vmGra._currGraphicsPen)}\" ` : \"\";\n                vmGra._graphicsBuffer.push(`<path ${strokeStr}d=\"${vmGra._graphicsPathBuffer.join(\"\")}\" />`);\n                vmGra._graphicsPathBuffer.length = 0;\n            }\n        },\n\n        getFlushedGraphics(): string {\n            vmGra.flushGraphicsPath();\n            if (vmGra._graphicsBuffer.length) {\n                const graphicsBufferStr = vmGra._graphicsBuffer.join(\"\\n\");\n                const strokeWith = strokeWidthForMode[vmGra._currMode] + \"px\";\n                vmGra._graphicsBuffer.length = 0;\n                return getTagInSvg(graphicsBufferStr, strokeWith, vmGra._backgroundColor);\n            }\n            return \"\";\n        },\n\n        getRgbColorStringForPen: (pen: number): string => {\n            return cpcColors[vmGra._colorsForPens[pen]];\n        },\n\n        graphicsPen: (num: number): void => {\n            if (num !== vmGra._currGraphicsPen) {\n                vmGra.flushGraphicsPath();\n                vmGra._currGraphicsPen = num;\n            }\n        },\n\n        ink: (num: number, col: number): void => {\n            vmGra._colorsForPens[num] = col;\n            // we modify inks, so set default pens and papers\n            if (vmGra._currGraphicsPen < 0) {\n                vmGra.graphicsPen(1);\n            }\n            if (num === 0) {\n                vmGra._backgroundColor = vmGra.getRgbColorStringForPen(0);\n            }\n        },\n\n        mode: (num: number): void => {\n            vmGra._currMode = num;\n            vmGra.origin(0, 0);\n        },\n\n        origin: (x: number, y: number): void => {\n            vmGra._originX = x;\n            vmGra._originY = y;\n        },\n\n        printGraphicsText: (text: string): void => {\n            const yOffset = 16;\n            const colorStyleStr = vmGra._currGraphicsPen >= 0 ? `; color: ${vmGra.getRgbColorStringForPen(vmGra._currGraphicsPen)}` : \"\";\n            vmGra.addGraphicsElement(`<text x=\"${vmGra._graphicsX + vmGra._originX}\" y=\"${399 - vmGra._graphicsY - vmGra._originY + yOffset}\" style=\"white-space: pre${colorStyleStr}\">${text}</text>`);\n            vmGra._graphicsX += text.length * 8; // assuming 8px width per character\n        },\n\n\n        getStrokeAndFillStr(fill: number): string {\n            const currGraphicsPen = vmGra._currGraphicsPen;\n            const strokeStr = currGraphicsPen >= 0 ? ` stroke=\"${vmGra.getRgbColorStringForPen(currGraphicsPen)}\"` : \"\";\n            const fillStr = fill >= 0 ? ` fill=\"${vmGra.getRgbColorStringForPen(fill)}\"` : \"\";\n            return `${strokeStr}${fillStr}`;\n        },\n\n        rsxArc: (args: (number | string)[]) => {\n            const [x, y, rx, ry, rotx, long, sweep, endx, endy, fill] = args.map((p) => Math.round(p as number));\n            const strokeAndFillStr = vmGra.getStrokeAndFillStr(fill);\n            const svgPathCmd = `M${x} ${399 - y} A${rx} ${ry} ${rotx} ${long} ${sweep} ${endx} ${399 - endy}`;\n            vmGra.addGraphicsElement(`<path d=\"${svgPathCmd}\"${strokeAndFillStr} />`);\n        },\n\n        rsxCircle: (args: (number | string)[]) => {\n            const [cx, cy, r, fill] = args.map((p) => Math.round(p as number));\n            const strokeAndFillStr = vmGra.getStrokeAndFillStr(fill);\n            vmGra.addGraphicsElement(`<circle cx=\"${cx}\" cy=\"${399 - cy}\" r=\"${r}\"${strokeAndFillStr} />`);\n        },\n\n        rsxEllipse: (args: (number | string)[]) => {\n            const [cx, cy, rx, ry, fill] = args.map((p) => Math.round(p as number));\n            const strokeAndFillStr = vmGra.getStrokeAndFillStr(fill);\n            vmGra.addGraphicsElement(`<ellipse cx=\"${cx}\" cy=\"${399 - cy}\" rx=\"${rx}\" ry=\"${ry}\"${strokeAndFillStr} />`);\n        },\n\n        rsxRect: (args: (number | string)[]) => {\n            const [x1, y1, x2, y2, fill] = args.map((p) => Math.round(p as number));\n            const x = Math.min(x1, x2);\n            const y = Math.max(y1, y2);\n            const width = Math.abs(x2 - x1);\n            const height = Math.abs(y2 - y1);\n            const strokeAndFillStr = vmGra.getStrokeAndFillStr(fill);\n            vmGra.addGraphicsElement(`<rect x=\"${x}\" y=\"${399 - y}\" width=\"${width}\" height=\"${height}\"${strokeAndFillStr} />`);\n        },\n\n        setOutputGraphicsIndex: (): void => {\n            if (vmGra._outputGraphicsIndex < 0) {\n                vmGra._outputGraphicsIndex = vm._output.length;\n            }\n        },\n\n        xpos: (): number => {\n            return vmGra._graphicsX;\n        },\n\n        ypos: (): number => {\n            return vmGra._graphicsY;\n        }\n    };\n\n    type RecursiveArray<T> = T | RecursiveArray<T>[];\n\n    type RestoreMapType = Record<string, number>;\n\n    // This object will be passed to the worker's code as `_o`\n    const vm = {\n        _gra: vmGra,\n        _rsx: vmRsx,\n        _inputResolvedFn: null as ((value: string) => void) | null,\n        _waitResolvedFn: null as (() => void) | null,\n        _isTerminal: false, // output for terminal\n\n        _data: [] as (string | number)[],\n        _dataPtr: 0,\n        _keyCharBufferString: \"\",\n        _needCls: false,\n        _output: \"\",\n        _paperSpanPos: -1,\n        _paperValue: -1,\n        _penSpanPos: -1,\n        _penValue: -1,\n        _pos: 0,\n        _restoreMap: {} as RestoreMapType,\n        _startTime: 0,\n        _stopRequested: false,\n        _tag: false,\n        _timerMap: {} as Record<number, (number | NodeJS.Timeout)>,\n        _vpos: 0,\n        _zone: 13,\n\n        resetAll: () => {\n            vm._rsx.resetRsx();\n            vm._gra.resetGra();\n            vm.cls();\n            vm._data.length = 0;\n            vm._dataPtr = 0;\n            vm._keyCharBufferString = \"\";\n            deleteAllItems(vm._restoreMap);\n            vm._startTime = Date.now();\n            vm._stopRequested = false;\n            vm.remainAll();\n        },\n\n        abs: (num: number) => Math.abs(num),\n\n        after: (timeout: number, timer: number, fn: () => void) => {\n            vm.remain(timer);\n            vm._timerMap[timer] = setTimeout(() => fn(), timeout * 20);\n        },\n\n        asc: (str: string) => str.charCodeAt(0),\n\n        atn: Math.atan,\n\n        bin$: (num: number, pad: number = 0): string => {\n            return num.toString(2).toUpperCase().padStart(pad, \"0\");\n        },\n\n        chr$: (num: number) => String.fromCharCode(num),\n\n        cint: (num: number) => Math.round(num),\n\n        clearInput: () => vm._keyCharBufferString = \"\",\n\n        cls: () => {\n            vm._output = \"\";\n            vm._paperSpanPos = -1;\n            vm._paperValue = -1;\n            vm._penSpanPos = -1;\n            vm._penValue = -1;\n            vm._pos = 0;\n            vm._tag = false;\n            vm._vpos = 0;\n            vm._zone = 13;\n\n            vm._gra.cls();\n            vm._needCls = true;\n        },\n\n        cos: Math.cos,\n\n        creal: (num: number) => num, // nothing\n\n        dec$: (num: number, format: string) => {\n            const decimals = (format.split(\".\")[1] || \"\").length;\n            const str = num.toFixed(decimals);\n            const pad = \" \".repeat(Math.max(0, format.length - str.length));\n            return pad + str;\n        },\n\n        dim: (dims: number[], value: string | number = 0) => {\n            const createRecursiveArray = (depth: number): RecursiveArray<string | number> => {\n                const length = dims[depth] + 1;\n                const array: RecursiveArray<string | number> = new Array(length);\n                depth += 1;\n                if (depth < dims.length) {\n                    for (let i = 0; i < length; i += 1) {\n                        array[i] = createRecursiveArray(depth);\n                    }\n                } else {\n                    array.fill(value);\n                }\n                return array;\n            };\n            return createRecursiveArray(0);\n        },\n\n        dim1: (dim: number, value: string | number = 0) => {\n            return new Array(dim + 1).fill(value);\n        },\n\n        draw: function draw(x: number, y: number, pen?: number) {\n            vm._gra.drawMovePlot(\"L\", x, y, pen);\n        },\n        drawr: function drawr(x: number, y: number, pen?: number) {\n            vm._gra.drawMovePlot(\"l\", x, y, pen);\n        },\n        end: function end() {\n            vm.frame();\n            return \"\"; //\"end\";\n        },\n\n        escapeText(str: string, isGraphics?: boolean): string {\n            if (vm._isTerminal && !isGraphics) { // for node.js we do not need to escape non-graphics text\n                return str;\n            }\n            return str.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\");\n        },\n\n        every: function every(timeout: number, timer: number, fn: () => void) {\n            vm.remain(timer);\n            vm._timerMap[timer] = setInterval(() => fn(), timeout * 20);\n        },\n\n        exp: (num: number) => Math.exp(num),\n\n        fix: (num: number) => Math.trunc(num),\n\n        frame: async () => {\n            if (vm._stopRequested) {\n                throw new Error(\"INFO: Program stopped\");\n            }\n            const message = vm.getFlushedTextandGraphics();\n            if (message) {\n                postMessage({ type: 'frame', message, needCls: vm._needCls });\n                vm._needCls = false;\n            }\n            return new Promise<void>(resolve => setTimeout(() => resolve(), Date.now() % 50));\n        },\n\n        getFlushedText: (): string => {\n            const output = vm._output;\n            vm._output = \"\";\n            return output;\n        },\n\n        handleTrailingNewline(str: string) {\n            return vm._isTerminal ? str.replace(/\\n$/, \"\") : str;\n        },\n\n        getFlushedTextandGraphics: () => {\n            const textOutput = vm.handleTrailingNewline(vm.getFlushedText());\n            const graphicsOutput = vm.handleTrailingNewline(vm._gra.getFlushedGraphics());\n            const outputGraphicsIndex = vm._gra._outputGraphicsIndex;\n            const hasGraphics = outputGraphicsIndex >= 0;\n            const output = hasGraphics ? textOutput.substring(0, outputGraphicsIndex) + graphicsOutput + textOutput.substring(outputGraphicsIndex) : textOutput;\n            return output;\n        },\n\n        graphicsPen: (num: number) => vm._gra.graphicsPen(num),\n\n        hex$: function hex$(num: number, pad?: number) {\n            return num.toString(16).toUpperCase().padStart(pad || 0, \"0\");\n        },\n        ink: function ink(num: number, col: number) {\n            vm._gra.ink(num, col);\n        },\n        inkey$: async function () {\n            await vm.frame();\n            if (vm._keyCharBufferString.length) {\n                const key = vm._keyCharBufferString.charAt(0);\n                vm._keyCharBufferString = vm._keyCharBufferString.substring(1);\n                return key;\n            }\n            return \"\";\n        },\n\n        input: async (prompt: string, isNum: boolean): Promise<string | number> => { // TODO: isNum\n            const inputPromise = new Promise<string>((resolve) => {\n                // Store early: The resolve function to be called later\n                vm._inputResolvedFn = resolve;\n            });\n            await vm.frame();\n            // Forward input request to main thread\n            postMessage({ type: 'input', prompt });\n\n            const input = await inputPromise;\n            if (input === null) {\n                throw new Error(\"INFO: Input canceled\");\n            } else if (isNum && isNaN(Number(input))) {\n                throw new Error(\"Invalid number input\");\n            }\n            return isNum ? Number(input) : input;\n        },\n\n        instr: function instr(str: string, find: string, len: number) {\n            return str.indexOf(find, len !== undefined ? len - 1 : len) + 1;\n        },\n\n        int: (num: number) => Math.floor(num),\n\n        keyDef(num: number, repeat: number, ...codes: number[]): void {\n            if (num === 78 && repeat === 1) {\n                postMessage({ type: 'keyDef', codes });\n            }\n        },\n        left$: function left$(str: string, num: number) {\n            return str.slice(0, num);\n        },\n\n        len: (str: string) => str.length,\n\n        log: (num: number) => Math.log(num),\n\n        log10: (num: number) => Math.log10(num),\n\n        lower$: (str: string) => str.toLowerCase(),\n\n        max: Math.max,\n\n        mid$: function mid$(str: string, pos: number, len?: number) {\n            return str.substr(pos - 1, len);\n        },\n        mid$Assign: function mid$Assign(s: string, start: number, newString: string, len?: number) {\n            start -= 1;\n            len = Math.min(len ?? newString.length, newString.length, s.length - start);\n            return s.substring(0, start) + newString.substring(0, len) + s.substring(start + len);\n        },\n\n        min: Math.min,\n\n        mode: function mode(num: number) {\n            vm._gra.mode(num);\n            vm.cls();\n        },\n        move: function move(x: number, y: number, pen?: number) {\n            vm._gra.drawMovePlot(\"M\", x, y, pen);\n        },\n        mover: function mover(x: number, y: number, pen?: number) {\n            vm._gra.drawMovePlot(\"m\", x, y, pen);\n        },\n        origin: function origin(x: number, y: number) {\n            vm._gra.origin(x, y);\n        },\n\n        // Use a virtual stack to handle paper and pen spans\n\n        paper: (n: number): void => {\n            if (n !== vm._paperValue) {\n                vm._paperValue = n;\n                if (vm._isTerminal) {\n                    const backgroundAdd = 10;\n                    const ansicolorCode = ansiColorCodes[vm._gra._colorsForPens[n]] + backgroundAdd;\n                    vm._output += `\\x1b[${ansicolorCode}m`;\n                    return;\n                }\n\n                // paper for browser: close open paper first\n                if (vm._paperSpanPos >= 0) {\n                    if (vm._penSpanPos > vm._paperSpanPos) { // if pen inside paper is open, close it\n                        vm._output += \"</span>\";\n                        vm._penSpanPos = -1;\n                    }\n                    vm._output += \"</span>\";\n                    vm._paperSpanPos = -1;\n                }\n\n                // Open new paper span\n                vm._paperSpanPos = vm._penSpanPos + 1;\n                vm._output += `<span style=\"background-color: ${cpcColors[vm._gra._colorsForPens[n]]}\">`;\n\n                // If pen was open before, reopen it inside\n                if (vm._penValue >= 0 && vm._penSpanPos === -1) {\n                    vm._penSpanPos = vm._paperSpanPos + 1;\n                    vm._output += `<span style=\"color: ${cpcColors[vm._gra._colorsForPens[vm._penValue]]}\">`;\n                }\n            }\n        },\n\n        pen(n: number): void {\n            if (n !== vm._penValue) {\n                vm._penValue = n;\n                if (vm._isTerminal) {\n                    const ansicolorCode = ansiColorCodes[vm._gra._colorsForPens[n]];\n                    vm._output += `\\x1b[${ansicolorCode}m`;\n                    return;\n                }\n\n                // close open pen first\n                if (vm._penSpanPos >= 0) {\n                    if (vm._paperSpanPos > vm._penSpanPos) { // if paper inside pen is open, close it\n                        vm._output += \"</span>\";\n                        vm._paperSpanPos = -1;\n                    }\n                    vm._output += \"</span>\";\n                    vm._penSpanPos = -1;\n                }\n\n                // Open new pen span\n                vm._penSpanPos = vm._paperSpanPos + 1;\n                vm._output += `<span style=\"color: ${cpcColors[vm._gra._colorsForPens[n]]}\">`;\n\n                // If paper was open before, reopen it inside\n                if (vm._paperValue >= 0 && vm._paperSpanPos === -1) {\n                    vm._paperSpanPos = vm._penSpanPos + 1;\n                    vm._output += `<span style=\"background-color: ${cpcColors[vm._gra._colorsForPens[vm._paperValue]]}\">`;\n                }\n            }\n        },\n\n        pi: Math.PI,\n\n        plot: function plot(x: number, y: number, pen?: number) {\n            vm._gra.drawMovePlot(\"P\", x, y, pen);\n        },\n        plotr: function plotr(x: number, y: number, pen?: number) {\n            vm._gra.drawMovePlot(\"p\", x, y, pen);\n        },\n        pos: function pos() {\n            return vm._pos + 1;\n        },\n\n        print: (...args: (string | number)[]) => {\n            const formatNumber = (arg: number) => (arg >= 0 ? ` ${arg} ` : `${arg} `);\n            const text = args.map((arg) => (typeof arg === \"number\") ? formatNumber(arg) : arg).join(\"\");\n            if (vm._tag) {\n                return vm._gra.printGraphicsText(vm.escapeText(text, true));\n            }\n            vm.printText(text);\n        },\n\n        // printTab: print with commaOp or tabOp\n        // For graphics output the text position does not change, so we can output all at once.\n        printTab: function printTab(...args: (string | number)[]) {\n            const formatNumber = (arg: number) => (arg >= 0 ? ` ${arg} ` : `${arg} `);\n            const strArgs = args.map((arg) => (typeof arg === \"number\") ? formatNumber(arg) : arg);\n            const formatCommaOrTab = (str: string) => {\n                if (str === CommaOpChar) {\n                    return \" \".repeat(vm._zone - (vm._pos % vm._zone));\n                } else if (str.charAt(0) === TabOpChar) {\n                    const tabSize = Number(str.substring(1));\n                    return \" \".repeat(tabSize - 1 - vm._pos);\n                }\n                return str;\n            };\n            if (vm._tag) {\n                return vm._gra.printGraphicsText(vm.escapeText(strArgs.map(arg => formatCommaOrTab(arg)).join(\"\"), true));\n            }\n            for (const str of strArgs) {\n                vm.printText(formatCommaOrTab(str));\n            }\n        },\n        printText: function printText(text: string) {\n            vm._output += vm.escapeText(text);\n            const lines = text.split(\"\\n\");\n            if (lines.length > 1) {\n                vm._vpos += lines.length - 1;\n                vm._pos = lines[lines.length - 1].length;\n            } else {\n                vm._pos += text.length;\n            }\n        },\n        read: function read() {\n            if (vm._dataPtr < vm._data.length) {\n                return vm._data[vm._dataPtr++];\n            } else {\n                throw new Error(\"4\"); // 4: DATA exhausted\n            }\n        },\n        // remain: the return value is not really the remaining time\n        remain: function remain(timer: number) {\n            const value = vm._timerMap[timer];\n            if (value !== undefined) {\n                clearTimeout(value);\n                delete vm._timerMap[timer];\n            }\n            return value;\n        },\n        remainAll: function () {\n            for (const timer in vm._timerMap) {\n                if (vm._timerMap[timer] !== undefined) {\n                    const value = vm._timerMap[timer];\n                    clearTimeout(value);\n                    delete vm._timerMap[timer];\n                }\n            }\n        },\n        restore: function restore(label: string) {\n            vm._dataPtr = vm._restoreMap[label];\n        },\n        right$: function right$(str: string, num: number) {\n            return str.substring(str.length - num);\n        },\n\n        rnd: Math.random,\n\n        round1: Math.round,\n\n        round: function round(num: number, dec: number) {\n            return Math.round(num * Math.pow(10, dec)) / Math.pow(10, dec);\n        },\n\n        rsxCall: async function (cmd: string, ...args: (string | number)[]) {\n            switch (cmd) {\n                case \"arc\":\n                    return vm._gra.rsxArc(args); // 9x number, number?\n                case \"circle\":\n                    return vm._gra.rsxCircle(args); // 3x number, number?\n                case \"date\":\n                    return vm._rsx.rsxDate(args); // string\n                case \"ellipse\":\n                    return vm._gra.rsxEllipse(args);\n                case \"pitch\":\n                    return vm._rsx.rsxPitch(args); // string\n                case \"rect\":\n                    return vm._gra.rsxRect(args); // 4x number, number?\n                case \"say\": {\n                    vm._rsx.rsxSay(args);// string\n                    return new Promise<void>((resolve) => {\n                        vm._waitResolvedFn = resolve;\n                    });\n                }\n                case \"time\":\n                    return vm._rsx.rsxTime(args); // string\n                default:\n                    throw new Error(`Unknown RSX command: |${cmd.toUpperCase()}`);\n            }\n        },\n\n        sgn: Math.sign,\n\n        sin: Math.sin,\n\n        space$: (num: number) => \" \".repeat(num),\n\n        spc: (num: number) => \" \".repeat(num), // same as space$\n\n        sqr: Math.sqrt,\n\n        stop: function stop() {\n            vm.frame();\n            return \"\"; //\"stop\";\n        },\n        str$: function str$(num: number) {\n            return num >= 0 ? ` ${num}` : String(num);\n        },\n\n        string$Num: (len: number, num: number) => {\n            return String.fromCharCode(num).repeat(len);\n        },\n\n        string$Str: (len: number, str: string) => {\n            return str.repeat(len);\n        },\n\n        tag: () => vm._tag = true,\n\n        tagoff: () => vm._tag = false,\n\n        tan: Math.tan,\n\n        time: function time() {\n            return ((Date.now() - vm._startTime) * 3 / 10) | 0;\n        },\n\n        toDeg: (num: number) => num * 180 / Math.PI,\n\n        toRad: (num: number) => num * Math.PI / 180,\n\n        using: (format: string, ...args: number[]) => {\n            return args.map((arg) => vm.dec$(arg, format)).join('');\n        },\n\n        unt: (num: number) => num,\n\n        upper$: (str: string) => str.toUpperCase(),\n\n        val1: (str: string) => Number(str),\n\n        val: function val(str: string) {\n            return Number(str.replace(\"&x\", \"0b\").replace(\"&\", \"0x\"));\n        },\n        vpos: function vpos() {\n            return vm._vpos + 1;\n        },\n        write: function write(...args: (string | number)[]) {\n            const text = args.map((arg) => (typeof arg === \"string\") ? `\"${arg}\"` : `${arg}`).join(\",\") + \"\\n\";\n            if (vm._tag) {\n                return vm._gra.printGraphicsText(vm.escapeText(text, true));\n            }\n            vm.printText(text);\n        },\n        xpos: () => vm._gra.xpos(),\n\n        ypos: () => vm._gra.ypos(),\n\n        zone: function zone(num: number) {\n            vm._zone = num;\n        },\n    };\n\n    // Get the error event with line number from an synchronous, uncatched error.\n    // It does not work for async functions with \"unhandledrejection\" event.\n    const errorEventHandler = (errorEvent: ErrorEvent) => {\n        errorEvent.preventDefault();\n        const { lineno, colno, message } = errorEvent;\n        const plainErrorEventObj = { lineno, colno, message };\n        const result = JSON.stringify(plainErrorEventObj);\n        vm.remainAll();\n        postMessage({ type: 'result', result });\n    };\n\n    // this function must not be async to generate synchronous error\n    const onMessageHandler = (data: MessageToWorker) => {\n        switch (data.type) {\n            case 'config':\n                vm._isTerminal = data.isTerminal;\n                break;\n            case 'continue':\n                if (vm._waitResolvedFn) {\n                    vm._waitResolvedFn();\n                    vm._waitResolvedFn = null;\n                }\n                break;\n\n            case 'input':\n                // resolve waiting input\n                if (vm._inputResolvedFn) {\n                    vm._inputResolvedFn(data.prompt);\n                    vm._inputResolvedFn = null;\n                }\n                break;\n\n            case 'putKeys':\n                vm._keyCharBufferString += data.keys;\n                break;\n\n            case 'run': {\n                vm.resetAll();\n\n                if (!parentPort) { // not for node.js\n                    self.addEventListener(\"error\", errorEventHandler, { once: true });\n                }\n                const fnScript = new Function(\"_o\", `\"use strict\"; return (async () => { ${data.code} })();`); // compile\n                if (!parentPort) {\n                    self.removeEventListener(\"error\", errorEventHandler);\n                }\n\n                fnScript(vm).then((result: string | undefined) => {\n                    vm.remainAll();\n                    const message = vm.getFlushedTextandGraphics();\n                    if (message) {\n                        postMessage({ type: 'frame', message, needCls: vm._needCls });\n                    }\n                    result = result ?? \"\";\n                    postMessage({ type: 'result', result });\n                }).catch((err: unknown) => {\n                    vm.remainAll();\n                    console.warn(err instanceof Error ? err.stack : String(err));\n                    const result = String(err);\n                    const message = vm.getFlushedTextandGraphics();\n                    if (message) {\n                        postMessage({ type: 'frame', message, needCls: vm._needCls });\n                    }\n                    postMessage({ type: 'result', result });\n                });\n                break;\n            }\n\n            case 'stop':\n                vm._stopRequested = true;\n                break;\n\n            default:\n                // Unknown message type\n                break;\n        }\n    };\n\n    if (parentPort) {\n        parentPort.on('message', onMessageHandler);\n    } else {\n        self.onmessage = (event) => {\n            const data = event.data as MessageToWorker;\n            onMessageHandler(data);\n        };\n    }\n    return vm; // for testing\n};\n\nif (typeof require !== \"undefined\") { // node.js?\n    (function callWithParentPort() {\n        const { parentPort } = require('worker_threads') as NodeWorkerThreads;\n        if (parentPort) { // is null in test environment\n            workerFn(parentPort);\n        }\n    })();\n}\n"],"names":[],"mappings":"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"}