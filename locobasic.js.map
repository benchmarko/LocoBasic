{"version":3,"file":"locobasic.js","sources":["../src/Parser.ts","../src/arithmetic.ts","../src/Semantics.ts","../src/Core.ts","../src/Ui.ts","../src/main.ts"],"sourcesContent":["// Parser.ts\n\nimport { type ActionDict, type Grammar, type Semantics, grammar } from \"ohm-js\";\n\nexport class Parser {\n\tprivate readonly ohmGrammar: Grammar;\n\tprivate readonly ohmSemantics: Semantics;\n\n\tconstructor(grammarString: string, semanticsMap: ActionDict<string | string[]>) {\n\t\tthis.ohmGrammar = grammar(grammarString);\n\t\tthis.ohmSemantics = this.ohmGrammar\n\t\t\t.createSemantics()\n\t\t\t.addOperation<string | string[]>(\"eval\", semanticsMap);\n\t}\n\n\t// Function to parse and evaluate an expression\n\tparseAndEval(input: string) {\n\t\ttry {\n\t\t\tconst matchResult = this.ohmGrammar.match(input);\n\t\t\tif (matchResult.succeeded()) {\n\t\t\t\treturn this.ohmSemantics(matchResult).eval();\n\t\t\t} else {\n\t\t\t\treturn 'ERROR: Parsing failed: ' + matchResult.message;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\treturn 'ERROR: Parsing evaluator failed: ' + (error instanceof Error ? error.message : \"unknown\");\n\t\t}\n\t}\n}\n","// arithmetics.ts\n//\nexport const arithmetic = {\n  grammar:\n    `\n    Arithmetic {\n    Program\n      = Line*\n\n    Line\n      = Label? Statements Comment? (eol | end)\n\n    Label\n     = label\n\n    Statements\n     = Statement (\":\" Statement)*\n\n    Statement\n     = Comment\n     | Comparison\n     | Cls\n     | Data\n     | Dim\n     | End\n     | Erase\n     | ForLoop\n     | Frame\n     | Gosub\n     | Input\n     | Next\n     | On\n     | Print\n     | Read\n     | Rem\n     | Restore\n     | Return\n     | Stop\n     | WhileLoop\n     | Wend\n     | ArrayAssign\n     | Assign\n\n    ArrayAssign\n      = ArrayIdent \"=\" NumExp\n      | StrArrayIdent \"=\" StrExp\n\n    Abs\n      = caseInsensitive<\"abs\"> \"(\" NumExp \")\"\n\n    Asc\n      = caseInsensitive<\"asc\"> \"(\" StrExp \")\"\n\n    Atn\n      = caseInsensitive<\"atn\"> \"(\" NumExp \")\"\n\n    Assign\n      = ident \"=\" NumExp\n      | strIdent \"=\" StrExp\n\n    Bin\n      = caseInsensitive<\"bin$\"> \"(\" NumExp (\",\" NumExp)? \")\"\n\n    Chr\n      = caseInsensitive<\"chr$\"> \"(\" NumExp \")\"\n\n    Cint\n      = caseInsensitive<\"cint\"> \"(\" NumExp \")\"\n\n    Cls\n      = caseInsensitive<\"cls\">\n\n    Comment\n      = \"\\\\'\" partToEol\n\n    Cos\n      = caseInsensitive<\"cos\"> \"(\" NumExp \")\"\n\n    DataItem\n      = string | number\n\n    Data\n      = caseInsensitive<\"data\"> NonemptyListOf<DataItem, \",\">  // TODO: also hex number?\n\n    Dim\n      = caseInsensitive<\"dim\"> NonemptyListOf<DimArrayIdent, \",\">\n\n    End\n      = caseInsensitive<\"end\">\n\n    Erase\n      = caseInsensitive<\"erase\"> NonemptyListOf<SimpleIdent, \",\">\n\n    Exp\n      = caseInsensitive<\"exp\"> \"(\" NumExp \")\"\n\n    Fix\n      = caseInsensitive<\"fix\"> \"(\" NumExp \")\"\n\n    ForLoop\n      = caseInsensitive<\"for\"> variable \"=\" NumExp caseInsensitive<\"to\"> NumExp (caseInsensitive<\"step\"> NumExp)?\n\n    Frame\n      = caseInsensitive<\"frame\">\n\n    Gosub\n      = caseInsensitive<\"gosub\"> label\n\n    Hex\n      = caseInsensitive<\"hex$\"> \"(\" NumExp (\",\" NumExp)? \")\"\n\n    Input\n      = caseInsensitive<\"input\"> (string (\";\" | \",\"))? AnyIdent  // or NonemptyListOf?\n\n    Instr\n      = caseInsensitive<\"instr\"> \"(\" StrExp \",\" StrExp \")\"\n\n    Int\n      = caseInsensitive<\"int\"> \"(\" NumExp \")\"\n\n    Left\n      = caseInsensitive<\"left$\"> \"(\" StrExp \",\" NumExp \")\"\n\n    Len\n      = caseInsensitive<\"len\"> \"(\" StrExp \")\"\n\n    Log\n      = caseInsensitive<\"log\"> \"(\" NumExp \")\"\n\n    Log10\n      = caseInsensitive<\"log10\"> \"(\" NumExp \")\"\n\n    Lower\n      = caseInsensitive<\"lower$\"> \"(\" StrExp \")\"\n\n    Max\n      = caseInsensitive<\"max\"> \"(\" NonemptyListOf<NumExp, \",\"> \")\"\n\n    Mid\n      = caseInsensitive<\"mid$\"> \"(\" StrExp \",\" NumExp (\",\" NumExp)? \")\"\n\n    Min\n      = caseInsensitive<\"min\"> \"(\" NonemptyListOf<NumExp, \",\"> \")\"\n\n    Pi\n      = caseInsensitive<\"pi\">\n\n    Next\n     = caseInsensitive<\"next\"> ListOf<variable, \",\">\n\n    On\n     = caseInsensitive<\"on\"> NumExp caseInsensitive<\"gosub\"> NonemptyListOf<label, \",\">\n\n    Print\n      = (caseInsensitive<\"print\"> | \"?\") PrintArgs? (\";\")?\n\n    PrintArgs\n      = PrintArg ((\",\" | \";\") PrintArg)*\n\n    PrintArg\n      = StrOrNumExp\n\n    Read\n      = caseInsensitive<\"read\"> NonemptyListOf<AnyIdent, \",\">\n\n    Rem\n      = caseInsensitive<\"Rem\"> partToEol\n\n    Restore\n      = caseInsensitive<\"Restore\"> label?\n\n    Return\n      = caseInsensitive<\"return\">\n\n    Right\n      = caseInsensitive<\"right$\"> \"(\" StrExp \",\" NumExp \")\"\n\n    Rnd\n      = caseInsensitive<\"rnd\"> \"(\" NumExp? \")\"\n    \n    Round\n      = caseInsensitive<\"round\"> \"(\" NumExp (\",\" NumExp)? \")\"\n\n    Sgn\n      = caseInsensitive<\"sgn\"> \"(\" NumExp \")\"\n\n    Sin\n      = caseInsensitive<\"sin\"> \"(\" NumExp \")\"\n\n    Space2\n      = caseInsensitive<\"space$\"> \"(\" NumExp \")\"\n\n    Sqr\n      = caseInsensitive<\"sqr\"> \"(\" NumExp \")\"\n\n    Stop\n      = caseInsensitive<\"stop\">\n\n    Str\n      = caseInsensitive<\"str$\"> \"(\" NumExp \")\"\n\n    String2\n      = caseInsensitive<\"string$\"> \"(\" NumExp \",\" StrExp \")\"\n\n    Tan\n      = caseInsensitive<\"tan\"> \"(\" NumExp \")\"\n\n    Time\n      = caseInsensitive<\"time\">\n\n    Upper\n      = caseInsensitive<\"upper$\"> \"(\" StrExp \")\"\n\n    Val\n      = caseInsensitive<\"val\"> \"(\" StrExp \")\"\n\n    Wend\n      = caseInsensitive<\"wend\">\n\n    WhileLoop\n      = caseInsensitive<\"while\"> StrOrNumExp\n\n    Comparison\n      = caseInsensitive<\"if\"> StrOrNumExp caseInsensitive<\"then\"> Statements (caseInsensitive<\"else\"> Statements)?\n\n    StrExp\n      = StrOrExp\n\n    StrOrExp\n      = StrAndExp caseInsensitive<\"or\"> StrOrExp  -- or\n      | StrAndExp\n\n    StrAndExp\n      = StrCmpExp caseInsensitive<\"and\"> StrAndExp  -- and\n      | StrCmpExp\n\n    StrCmpExp\n      = StrCmpExp \"=\" StrAddExp  -- eq\n      | StrCmpExp \"<>\" StrAddExp  -- ne\n      | StrAddExp\n\n    StrAddExp\n      = StrAddExp \"+\" StrPriExp  -- plus\n      | StrPriExp\n\n    StrPriExp\n      = \"(\" StrExp \")\"  -- paren\n      | Bin\n      | Chr\n      | Hex\n      | Left\n      | Lower\n      | Mid\n      | Right\n      | Space2\n      | Str\n      | String2\n      | Upper\n      | StrArrayIdent\n      | strIdent\n      | string\n\n    StrOrNumExp\n      = StrExp | NumExp\n\n    NumExp\n      = XorExp\n\n    XorExp\n      = OrExp caseInsensitive<\"xor\"> XorExp  -- xor\n      | OrExp\n\n    OrExp\n      = AndExp caseInsensitive<\"or\"> OrExp  -- or\n      | AndExp\n\n    AndExp\n      = NotExp caseInsensitive<\"and\"> AndExp  -- and\n      | NotExp\n\n    NotExp\n      = caseInsensitive<\"not\"> NotExp  -- not\n      | CmpExp\n\n    CmpExp\n      = CmpExp \"=\" AddExp  -- eq\n      | CmpExp \"<>\" AddExp  -- ne\n      | CmpExp \"<\" AddExp  -- lt\n      | CmpExp \"<=\" AddExp  -- le\n      | CmpExp \">\" AddExp  -- gt\n      | CmpExp \">=\" AddExp  -- ge\n      | AddExp\n\n    AddExp\n      = AddExp \"+\" ModExp  -- plus\n      | AddExp \"-\" ModExp  -- minus\n      | ModExp\n\n    ModExp\n      = ModExp caseInsensitive<\"mod\"> DivExp -- mod\n      | DivExp\n\n    DivExp\n      = DivExp \"\\\\\\\\\" MulExp -- div\n      | MulExp\n\n    MulExp\n      = MulExp \"*\" ExpExp  -- times\n      | MulExp \"/\" ExpExp  -- divide\n      | ExpExp\n\n    ExpExp\n      = PriExp \"^\" ExpExp  -- power\n      | PriExp\n\n    PriExp\n      = \"(\" NumExp \")\"  -- paren\n      | \"+\" PriExp   -- pos\n      | \"-\" PriExp   -- neg\n      | ArrayIdent\n      | ident\n      | number\n      | Abs\n      | Asc\n      | Atn\n      | Cint\n      | Cos\n      | Exp\n      | Fix\n      | Instr\n      | Int\n      | Len\n      | Log\n      | Log10\n      | Max\n      | Min\n      | Pi\n      | Rnd\n      | Round\n      | Sgn\n      | Sin\n      | Sqr\n      | Tan\n      | Time\n      | Val\n\n\n    ArrayArgs\n      = NonemptyListOf<StrOrNumExp, \",\">\n\n    ArrayIdent\n      = ident \"(\" ArrayArgs \")\"\n\n    StrArrayIdent\n      = strIdent \"(\" ArrayArgs \")\"\n\n    DimArrayIdent\n      = ident \"(\" ArrayArgs \")\"\n      | strIdent \"(\" ArrayArgs \")\"\n\n    SimpleIdent\n      = strIdent\n      | ident\n\n    AnyIdent\n      = StrArrayIdent\n      | ArrayIdent\n      | strIdent\n      | ident\n\n    keyword\n      = abs | after | and | asc | atn | auto | bin | border | break\n      | call | cat | chain | chr | cint | clear | clg | closein | closeout | cls | cont | copychr | cos | creal | cursor\n      | data | dec | def | defint | defreal | defstr | deg | delete | derr | di | dim | draw | drawr\n      | edit | ei | else | end2 | ent | env | eof | erase | erl | err | error | every | exp | fill | fix | fn | for | frame | fre | gosub | goto | graphics\n      | hex | himem | if | ink | inkey | inp | input | instr | int | joy | key | left | len | let | line | list | load | locate | log | log10 | lower2\n      | mask | max | memory | merge | mid | min | mod | mode | move | mover | new | next | not | on | openin | openout | or | origin | out\n      | paper | peek | pen | pi | plot | plotr | poke | pos | print\n      | rad | randomize | read | release | rem | remain | renum | restore | resume | return | right | rnd | round | run\n      | save | sgn | sin | sound | space2 | spc | speed | sq | sqr | step | stop | str | string2 | swap | symbol\n      | tab | tag | tagoff | tan | test | testr | then | time | to | troff | tron | unt | upper2 | using\n      | val | vpos | wait | wend | while | width | window | write | xor | xpos | ypos | zone\n\n\n    abs\n       = caseInsensitive<\"abs\"> ~identPart\n    after\n      = caseInsensitive<\"after\"> ~identPart\n    and\n    = caseInsensitive<\"and\"> ~identPart\n    asc\n    = caseInsensitive<\"asc\"> ~identPart\n    atn\n    = caseInsensitive<\"atn\"> ~identPart\n    auto\n    = caseInsensitive<\"auto\"> ~identPart\n    bin\n    = caseInsensitive<\"bin$\"> ~identPart\n    border\n    = caseInsensitive<\"border\"> ~identPart\n    break\n    = caseInsensitive<\"break\"> ~identPart\n    call\n    = caseInsensitive<\"call\"> ~identPart\n    cat\n    = caseInsensitive<\"cat\"> ~identPart\n    chain\n    = caseInsensitive<\"chain\"> ~identPart\n    chr\n    = caseInsensitive<\"chr$\"> ~identPart\n    cint\n    = caseInsensitive<\"cint\"> ~identPart\n    clear\n    = caseInsensitive<\"clear\"> ~identPart\n    clg\n    = caseInsensitive<\"clg\"> ~identPart\n    closein\n    = caseInsensitive<\"closein\"> ~identPart\n    closeout\n    = caseInsensitive<\"closeout\"> ~identPart\n    cls\n    = caseInsensitive<\"cls\"> ~identPart\n    cont\n    = caseInsensitive<\"cont\"> ~identPart\n    copychr\n    = caseInsensitive<\"copychr$\"> ~identPart\n    cos\n    = caseInsensitive<\"cos\"> ~identPart\n    creal\n    = caseInsensitive<\"creal\"> ~identPart\n    cursor\n    = caseInsensitive<\"cursor\"> ~identPart\n    data\n    = caseInsensitive<\"data\"> ~identPart\n    dec\n    = caseInsensitive<\"dec\"> ~identPart\n    def\n    = caseInsensitive<\"def\"> ~identPart\n    defint\n    = caseInsensitive<\"defint\"> ~identPart\n    defreal\n    = caseInsensitive<\"defreal\"> ~identPart\n    defstr\n    = caseInsensitive<\"defstr\"> ~identPart\n    deg\n    = caseInsensitive<\"deg\"> ~identPart\n    delete\n    = caseInsensitive<\"delete\"> ~identPart\n    derr\n    = caseInsensitive<\"derr\"> ~identPart\n    di\n    = caseInsensitive<\"di\"> ~identPart\n    dim\n    = caseInsensitive<\"dim\"> ~identPart\n    draw\n    = caseInsensitive<\"draw\"> ~identPart\n    drawr\n    = caseInsensitive<\"drawr\"> ~identPart\n    edit\n    = caseInsensitive<\"edit\"> ~identPart\n    ei\n    = caseInsensitive<\"ei\"> ~identPart\n    else\n    = caseInsensitive<\"else\"> ~identPart\n    end2\n    = caseInsensitive<\"end\"> ~identPart\n    ent\n    = caseInsensitive<\"ent\"> ~identPart\n    env\n    = caseInsensitive<\"env\"> ~identPart\n    eof\n    = caseInsensitive<\"eof\"> ~identPart\n    erase\n    = caseInsensitive<\"erase\"> ~identPart\n    erl\n    = caseInsensitive<\"erl\"> ~identPart\n    err\n    = caseInsensitive<\"err\"> ~identPart\n    error\n    = caseInsensitive<\"error\"> ~identPart\n    every\n    = caseInsensitive<\"every\"> ~identPart\n    exp\n    = caseInsensitive<\"exp\"> ~identPart\n    fill\n    = caseInsensitive<\"fill\"> ~identPart\n    fix\n    = caseInsensitive<\"fix\"> ~identPart\n    fn\n    = caseInsensitive<\"fn\"> ~identPart\n    for\n    = caseInsensitive<\"for\"> ~identPart\n    frame\n    = caseInsensitive<\"frame\"> ~identPart\n    fre\n    = caseInsensitive<\"fre\"> ~identPart\n    gosub\n    = caseInsensitive<\"gosub\"> ~identPart\n    goto\n    = caseInsensitive<\"goto\"> ~identPart\n    graphics\n    = caseInsensitive<\"graphics\"> ~identPart\n    hex\n    = caseInsensitive<\"hex$\"> ~identPart\n    himem\n    = caseInsensitive<\"himem\"> ~identPart\n    if\n    = caseInsensitive<\"if\"> ~identPart\n    ink\n    = caseInsensitive<\"ink\"> ~identPart\n    inkey\n    = caseInsensitive<\"inkey\"> ~identPart\n    | caseInsensitive<\"inkey$\"> ~identPart\n    inp\n    = caseInsensitive<\"inp\"> ~identPart\n    input\n    = caseInsensitive<\"input\"> ~identPart\n    instr\n    = caseInsensitive<\"instr\"> ~identPart\n    int\n    = caseInsensitive<\"int\"> ~identPart\n    joy\n    = caseInsensitive<\"joy\"> ~identPart\n    key\n    = caseInsensitive<\"key\"> ~identPart\n    left\n    = caseInsensitive<\"left$\"> ~identPart\n    len\n    = caseInsensitive<\"len\"> ~identPart\n    let\n    = caseInsensitive<\"let\"> ~identPart\n    line\n    = caseInsensitive<\"line\"> ~identPart\n    list\n    = caseInsensitive<\"list\"> ~identPart\n    load\n    = caseInsensitive<\"load\"> ~identPart\n    locate\n    = caseInsensitive<\"locate\"> ~identPart\n    log\n    = caseInsensitive<\"log\"> ~identPart\n    log10\n    = caseInsensitive<\"log10\"> ~identPart\n    lower2\n    = caseInsensitive<\"lower$\"> ~identPart\n    mask\n    = caseInsensitive<\"mask\"> ~identPart\n    max\n    = caseInsensitive<\"max\"> ~identPart\n    memory\n    = caseInsensitive<\"memory\"> ~identPart\n    merge\n    = caseInsensitive<\"merge\"> ~identPart\n    mid\n    = caseInsensitive<\"mid$\"> ~identPart\n    min\n    = caseInsensitive<\"min\"> ~identPart\n    mod\n    = caseInsensitive<\"mod\"> ~identPart\n    mode\n    = caseInsensitive<\"mode\"> ~identPart\n    move\n    = caseInsensitive<\"move\"> ~identPart\n    mover\n    = caseInsensitive<\"mover\"> ~identPart\n    new\n    = caseInsensitive<\"new\"> ~identPart\n    next\n    = caseInsensitive<\"next\"> ~identPart\n    not\n    = caseInsensitive<\"not\"> ~identPart\n    on\n    = caseInsensitive<\"on\"> ~identPart\n    openin\n    = caseInsensitive<\"openin\"> ~identPart\n    openout\n    = caseInsensitive<\"openout\"> ~identPart\n    or\n    = caseInsensitive<\"or\"> ~identPart\n    origin\n    = caseInsensitive<\"origin\"> ~identPart\n    out\n    = caseInsensitive<\"out\"> ~identPart\n    paper\n    = caseInsensitive<\"paper\"> ~identPart\n    peek\n    = caseInsensitive<\"peek\"> ~identPart\n    pen\n    = caseInsensitive<\"pen\"> ~identPart\n    pi\n    = caseInsensitive<\"pi\"> ~identPart\n    plot\n    = caseInsensitive<\"plot\"> ~identPart\n    plotr\n    = caseInsensitive<\"plotr\"> ~identPart\n    poke\n    = caseInsensitive<\"poke\"> ~identPart\n    pos\n    = caseInsensitive<\"pos\"> ~identPart\n    print\n    = caseInsensitive<\"print\"> ~identPart\n    rad\n    = caseInsensitive<\"rad\"> ~identPart\n    randomize\n    = caseInsensitive<\"randomize\"> ~identPart\n    read\n    = caseInsensitive<\"read\"> ~identPart\n    release\n    = caseInsensitive<\"release\"> ~identPart\n    rem\n    = caseInsensitive<\"rem\"> ~identPart\n    remain\n    = caseInsensitive<\"remain\"> ~identPart\n    renum\n    = caseInsensitive<\"renum\"> ~identPart\n    restore\n    = caseInsensitive<\"restore\"> ~identPart\n    resume\n    = caseInsensitive<\"resume\"> ~identPart\n    return\n    = caseInsensitive<\"return\"> ~identPart\n    right\n    = caseInsensitive<\"right$\"> ~identPart\n    rnd\n    = caseInsensitive<\"rnd\"> ~identPart\n    round\n    = caseInsensitive<\"round\"> ~identPart\n    run\n    = caseInsensitive<\"run\"> ~identPart\n    save\n    = caseInsensitive<\"save\"> ~identPart\n    sgn\n    = caseInsensitive<\"sgn\"> ~identPart\n    sin\n    = caseInsensitive<\"sin\"> ~identPart\n    sound\n    = caseInsensitive<\"sound\"> ~identPart\n    space2\n    = caseInsensitive<\"space\"> ~identPart\n    spc\n    = caseInsensitive<\"spc\"> ~identPart\n    speed\n    = caseInsensitive<\"speed\"> ~identPart\n    sq\n    = caseInsensitive<\"sq\"> ~identPart\n    sqr\n    = caseInsensitive<\"sqr\"> ~identPart\n    step\n    = caseInsensitive<\"step\"> ~identPart\n    stop\n    = caseInsensitive<\"stop\"> ~identPart\n    str\n    = caseInsensitive<\"str$\"> ~identPart\n    string2\n    = caseInsensitive<\"string$\"> ~identPart\n    swap\n    = caseInsensitive<\"swap\"> ~identPart\n    symbol\n    = caseInsensitive<\"symbol\"> ~identPart\n    tab\n    = caseInsensitive<\"tab\"> ~identPart\n    tag\n    = caseInsensitive<\"tag\"> ~identPart\n    tagoff\n    = caseInsensitive<\"tagoff\"> ~identPart\n    tan\n    = caseInsensitive<\"tan\"> ~identPart\n    test\n    = caseInsensitive<\"test\"> ~identPart\n    testr\n    = caseInsensitive<\"testr\"> ~identPart\n    then\n    = caseInsensitive<\"then\"> ~identPart\n    time\n    = caseInsensitive<\"time\"> ~identPart\n    to\n    = caseInsensitive<\"to\"> ~identPart\n    troff\n    = caseInsensitive<\"troff\"> ~identPart\n    tron\n    = caseInsensitive<\"tron\"> ~identPart\n    unt\n    = caseInsensitive<\"unt\"> ~identPart\n    upper2\n    = caseInsensitive<\"upper$\"> ~identPart\n    using\n    = caseInsensitive<\"using\"> ~identPart\n    val\n    = caseInsensitive<\"val\"> ~identPart\n    vpos\n    = caseInsensitive<\"vpos\"> ~identPart\n    wait\n    = caseInsensitive<\"wait\"> ~identPart\n    wend\n    = caseInsensitive<\"wend\"> ~identPart\n    while\n    = caseInsensitive<\"while\"> ~identPart\n    width\n    = caseInsensitive<\"width\"> ~identPart\n    window\n    = caseInsensitive<\"window\"> ~identPart\n    write\n    = caseInsensitive<\"write\"> ~identPart\n    xor\n    = caseInsensitive<\"xor\"> ~identPart\n    xpos\n    = caseInsensitive<\"xpos\"> ~identPart\n    ypos\n    = caseInsensitive<\"ypos\"> ~identPart\n    zone\n    = caseInsensitive<\"zone\"> ~identPart\n\n\n    ident (an identifier) =\n      ~keyword identName\n\n    identName = identStart identPart*\n\n    identStart = letter\n\n    identPart = identStart | digit\n\n    variable = ident\n\n    strIdent\n     = ~keyword identName (\"$\")\n\n    binaryDigit = \"0\"..\"1\"\n\n    decimalValue  (decimal number)\n      = digit* \".\" digit+  -- fract\n      | digit+             -- whole\n\n    hexValue\n      = \"&\" hexDigit+\n\n    binaryValue\n      = caseInsensitive<\"&x\"> binaryDigit+\n\n    number  (a number)\n      = decimalValue\n      | hexValue\n      | binaryValue\n\n    partToEol\n      = (~eol any)*\n\n    string = \"\\\\\"\" (\"\\\\\\\\\\\\\"\" | (~\"\\\\\"\" any))* \"\\\\\"\"\n\n    label = digit+\n\n    space := \" \" | \"\\t\"\n\n    eol (end of line)\n        = \"\\\\n\"\n    }\n  `\n};\n","// Semantics.ts\nimport type { ActionDict, Node } from \"ohm-js\";\n\n\ntype DefinedLabelEntryType = {\n\tlabel: string,\n\tfirst: number,\n\tlast: number,\n\tdataIndex: number\n}\n\ntype GosubLabelEntryType = {\n\tcount: number\n}\n\ninterface SemanticsHelper {\n\taddDataIndex(count: number): void,\n\taddDefinedLabel(label: string, line: number): void,\n\taddGosubLabel(label: string): void,\n\taddIndent(num: number): number,\n\taddInstr(name: string): number,\n\taddRestoreLabel(label: string): void,\n\tapplyNextIndent(): void,\n\tgetDataIndex(): number,\n\tgetDataList(): (string | number)[],\n\tgetDefinedLabels(): DefinedLabelEntryType[],\n\tgetGosubLabels(): Record<string, GosubLabelEntryType>,\n\tgetIndent(): number,\n\tgetIndentStr(): string,\n\tgetInstrKeys(): string[],\n\tgetRestoreMap(): Record<string, number>,\n\tgetVariable(name: string): string,\n\tgetVariables(): string[],\n\tincrementLineIndex(): number,\n\tnextIndentAdd(num: number): void,\n\tsetIndent(indent: number): void\n}\n\nfunction getCodeSnippets() {\n\tlet _data: (string | number)[] = [];\n\tlet _dataPtr = 0;\n\tlet _restoreMap: Record<string, number> = {};\n\t//let dataList: (string|number)[] = []; // eslint-disable-line prefer-const\n\n\tconst codeSnippets: Record<string, Function> = {\n\t\t_dataDefine: function _dataDefine() { // not really used\n\t\t\t_data = [ ];\n\t\t\t_dataPtr = 0;\n\t\t\t_restoreMap = {};\n\t\t},\n\t\t_dim: function _dim(dims: number[], initVal: string | number = 0): any[] {\n\t\t\tconst createRecursiveArray = (depth: number): any[] => {\n\t\t\t\tconst length = dims[depth] + 1; // +1 because of 0-based index\n\t\t\t\tconst array = Array.from({ length }, () =>\n\t\t\t\t\tdepth + 1 < dims.length ? createRecursiveArray(depth + 1) : initVal\n\t\t\t\t);\n\t\t\t\treturn array;\n\t\t\t};\n\t\t\treturn createRecursiveArray(0);\n\t\t},\n\t\t_frame: function _frame() {\n\t\t\treturn new Promise<void>(resolve => setTimeout(() => resolve(), Date.now() % 50)); //TODO\n\t\t},\n\t\t_input: function _input(msg: string, isNum: boolean) {\n\t\t\treturn new Promise(resolve => setTimeout(() => resolve(isNum ? Number(prompt(msg)) : prompt(msg)), 0));\n\t\t},\n\t\t_read: function _read() {\n\t\t\treturn _data[_dataPtr++];\n\t\t},\n\t\t_restore: function _restore(label: string) {\n\t\t\t_dataPtr = _restoreMap[label];\n\t\t},\n\t\t_round: function _round(num: number, dec: number) {\n\t\t\treturn (Math.round(num * Math.pow(10, dec)) / Math.pow(10, dec))\n\t\t},\n\t\t_time: function _time() {\n\t\t\treturn (Date.now() * 3 / 10) | 0;\n\t\t}\n\t};\n\treturn codeSnippets;\n}\n\n\nfunction evalChildren(children: Node[]) {\n\treturn children.map(c => c.eval());\n}\n\nfunction getSemantics(semanticsHelper: SemanticsHelper) {\n\t// Semantics to evaluate an arithmetic expression\n\tconst semantics: ActionDict<string | string[]> = {\n\t\tProgram(lines: Node) {\n\t\t\tconst lineList = evalChildren(lines.children);\n\n\t\t\tconst variableList = semanticsHelper.getVariables();\n\t\t\tconst varStr = variableList.length ? \"let \" + variableList.map((v) => v.endsWith(\"$\") ? `${v} = \"\"` : `${v} = 0`).join(\", \") + \";\" : \"\";\n\n\t\t\t// find subroutines\n\t\t\tconst definedLabels = semanticsHelper.getDefinedLabels();\n\t\t\tconst gosubLabels = semanticsHelper.getGosubLabels();\n\t\t\tconst restoreMap = semanticsHelper.getRestoreMap();\n\n\t\t\tlet subFirst: DefinedLabelEntryType | undefined;\n\t\t\tfor (let index = 0; index < definedLabels.length; index += 1) {\n\t\t\t\tconst item = definedLabels[index];\n\t\t\t\tif (gosubLabels[item.label]) {\n\t\t\t\t\tsubFirst = item;\n\t\t\t\t}\n\n\t\t\t\tif (subFirst && item.last >= 0) {\n\t\t\t\t\tconst first = subFirst.first;\n\t\t\t\t\tconst indent = lineList[first].search(/\\S|$/);\n\t\t\t\t\tconst indentStr = \" \".repeat(indent);\n\n\t\t\t\t\tfor (let i = first; i <= item.last; i += 1) {\n\t\t\t\t\t\tlineList[i] = \"  \" + lineList[i]; // ident\n\t\t\t\t\t}\n\n\t\t\t\t\tlineList[first] = `${indentStr}function _${subFirst.label}() {${indentStr}\\n` + lineList[first];\n\t\t\t\t\tlineList[item.last] += `\\n${indentStr}` + \"}\"; //TS issue when using the following? `\\n${indentStr}};`\n\t\t\t\t\tsubFirst = undefined;\n\t\t\t\t}\n\n\t\t\t\tif (restoreMap[item.label] === -1) {\n\t\t\t\t\trestoreMap[item.label] = item.dataIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst dataList = semanticsHelper.getDataList();\n\t\t\tif (dataList.length) {\n\t\t\t\t//let startIdx = 0;\n\t\t\t\tfor (const key of Object.keys(restoreMap)) {\n\t\t\t\t\tlet index = restoreMap[key];\n\t\t\t\t\tif (index < 0) {\n\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\trestoreMap[key] = index; //TODO\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlineList.unshift(`const {_data, _restoreMap} = _defineData();\\nlet _dataPtr = 0;`);\n\t\t\t\tlineList.push(`function _defineData() {\\n  const _data = [\\n${dataList.join(\",\\n\")}\\n  ];\\nconst _restoreMap =\\n    ${JSON.stringify(restoreMap)};\\nreturn {_data, _restoreMap}\\n}`);\n\t\t\t}\n\n\t\t\tlineList.push(\"// library\");\n\n\t\t\tconst instrKeys = semanticsHelper.getInstrKeys();\n\t\t\tconst codeSnippets = getCodeSnippets();\n\t\t\tfor (const key of instrKeys) {\n\t\t\t\tlineList.push(String(codeSnippets[key]));\n\t\t\t}\n\n\t\t\tif (varStr) {\n\t\t\t\tlineList.unshift(varStr);\n\t\t\t}\n\n\t\t\tif (instrKeys.includes(\"_frame\") || instrKeys.includes(\"_input\")) {\n\t\t\t\tlineList.unshift(`return async function() {`);\n\t\t\t\tlineList.push('}();');\n\t\t\t}\n\n\t\t\tlineList.unshift(`\"use strict\"`);\n\n\t\t\tconst lineStr = lineList.filter((line) => line !== \"\").join('\\n');\n\t\t\treturn lineStr;\n\t\t},\n\n\t\tLine(label: Node, stmts: Node, comment: Node, _eol: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\tconst labelStr = label.sourceString;\n\n\t\t\tconst currentLineIndex = semanticsHelper.incrementLineIndex() - 1;\n\n\t\t\tif (labelStr) {\n\t\t\t\tsemanticsHelper.addDefinedLabel(labelStr, currentLineIndex);\n\t\t\t}\n\n\t\t\tconst lineStr = stmts.eval();\n\n\t\t\tif (lineStr === \"return\") {\n\t\t\t\tconst definedLabels = semanticsHelper.getDefinedLabels();\n\t\t\t\tif (definedLabels.length) {\n\t\t\t\t\tconst lastLabelItem = definedLabels[definedLabels.length - 1];\n\t\t\t\t\tlastLabelItem.last = currentLineIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst commentStr = comment.sourceString ? `; //${comment.sourceString.substring(1)}` : \"\";\n\t\t\tconst semi = lineStr === \"\" || lineStr.endsWith(\"{\") || lineStr.endsWith(\"}\") || lineStr.startsWith(\"//\") || commentStr ? \"\" : \";\";\n\n\t\t\tconst indentStr = semanticsHelper.getIndentStr();\n\t\t\tsemanticsHelper.applyNextIndent();\n\n\t\t\treturn indentStr + lineStr + commentStr + semi;\n\t\t},\n\n\t\tStatements(stmt: Node, _stmtSep: Node, stmts: Node) {\n\t\t\t// separate statements, use \";\", if the last stmt does not end with \"{\"\n\t\t\treturn [stmt.eval(), ...evalChildren(stmts.children)].reduce((str, st) => str.endsWith(\"{\") ? `${str} ${st}` : `${str}; ${st}`);\n\t\t},\n\n\t\tArrayAssign(ident: Node, _op: Node, e: Node): string {\n\t\t\treturn `${ident.eval()} = ${e.eval()}`;\n\t\t},\n\n\t\tAssign(ident: Node, _op: Node, e: Node): string {\n\t\t\tconst name = ident.sourceString;\n\t\t\tconst name2 = semanticsHelper.getVariable(name);\n\t\t\tconst value = e.eval();\n\t\t\treturn `${name2} = ${value}`;\n\t\t},\n\n\t\tAbs(_absLit: Node, _open: Node, e: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\treturn `Math.abs(${e.eval()})`;\n\t\t},\n\n\t\tAsc(_ascLit: Node, _open: Node, e: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\treturn `(${e.eval()}).charCodeAt(0)`;\n\t\t},\n\n\t\tAtn(_atnLit: Node, _open: Node, e: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\treturn `Math.atan(${e.eval()})`;\n\t\t},\n\n\t\tBin(_binLit: Node, _open: Node, e: Node, _comma: Node, n: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\tconst pad = n.child(0)?.eval();\n\t\t\tconst padStr = pad !== undefined ? `.padStart(${pad} || 0, \"0\")` : '';\n\t\t\treturn `(${e.eval()}).toString(2).toUpperCase()${padStr}`;\n\t\t},\n\n\t\tChr(_chrLit: Node, _open: Node, e: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\treturn `String.fromCharCode(${e.eval()})`;\n\t\t},\n\n\t\tComment(_commentLit: Node, remain: Node) {\n\t\t\treturn `//${remain.sourceString}`;\n\t\t},\n\n\t\tCos(_cosLit: Node, _open: Node, e: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\treturn `Math.cos(${e.eval()})`;\n\t\t},\n\n\t\tData(_datalit: Node, args: Node) {\n\t\t\tconst argList = args.asIteration().children.map(c => c.eval());\n\n\t\t\tconst definedLabels = semanticsHelper.getDefinedLabels();\n\n\t\t\tif (definedLabels.length) {\n\t\t\t\tconst dataIndex = semanticsHelper.getDataIndex();\n\t\t\t\tconst currentLabel = definedLabels[definedLabels.length - 1];\n\t\t\t\tcurrentLabel.dataIndex = dataIndex;\n\t\t\t}\n\n\t\t\tconst dataList = semanticsHelper.getDataList();\n\t\t\tdataList.push(argList.join(\", \"));\n\t\t\tsemanticsHelper.addDataIndex(argList.length);\n\t\t\treturn \"\";\n\t\t},\n\n\t\tDim(_dimLit: Node, arrayIdents: Node) {\n\t\t\tconst argList = arrayIdents.asIteration().children.map(c => c.eval());\n\t\t\tconst results: string[] = [];\n\n\t\t\tfor (const arg of argList) {\n\t\t\t\tconst [ident, ...indices] = arg;\n\t\t\t\tlet createArrStr: string;\n\t\t\t\tif (indices.length > 1) { // multi-dimensional?\n\t\t\t\t\tconst initValStr = ident.endsWith(\"$\") ? ', \"\"' : '';\n\t\t\t\t\tcreateArrStr = `_dim([${indices}]${initValStr})`; // indices are automatically joined with comma\n\t\t\t\t\tsemanticsHelper.addInstr(\"_dim\");\n\t\t\t\t} else {\n\t\t\t\t\tconst fillStr = ident.endsWith(\"$\") ? `\"\"` : \"0\";\n\t\t\t\t\tcreateArrStr = `new Array(${indices[0]} + 1).fill(${fillStr})`; // +1 because of 0-based index\n\t\t\t\t}\n\t\t\t\tresults.push(`${ident} = ${createArrStr}`);\n\t\t\t}\n\n\t\t\treturn results.join(\"; \");\n\t\t},\n\n\t\tCint(_cintLit: Node, _open: Node, e: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\treturn `Math.round(${e.eval()})`;\n\t\t},\n\n\t\tCls(_clsLit: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\treturn `_o.cls()`;\n\t\t},\n\n\t\tComparison(_iflit: Node, condExp: Node, _thenLit: Node, thenStat: Node, elseLit: Node, elseStat: Node) {\n\t\t\tconst cond = condExp.eval();\n\n\t\t\tconst thSt = thenStat.eval();\n\n\t\t\tconst indentStr = semanticsHelper.getIndentStr();\n\t\t\tsemanticsHelper.addIndent(2);\n\t\t\tconst indentStr2 = semanticsHelper.getIndentStr();\n\t\t\tsemanticsHelper.addIndent(-2);\n\n\t\t\tlet result = `if (${cond}) {\\n${indentStr2}${thSt}\\n${indentStr}}`; // put in newlines to also allow line comments\n\t\t\tif (elseLit.sourceString) {\n\t\t\t\tconst elseSt = evalChildren(elseStat.children).join('; ');\n\t\t\t\tresult += ` else {\\n${indentStr2}${elseSt}\\n${indentStr}}`;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t},\n\n\t\tEnd(_endLit: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\treturn `return \"end\"`;\n\t\t},\n\n\t\tErase(_eraseLit: Node, arrayIdents: Node) { // erase not really needed\n\t\t\tconst argList = arrayIdents.asIteration().children.map(c => c.eval());\n\t\t\tconst results: string[] = [];\n\n\t\t\tfor (const ident of argList) {\n\t\t\t\tconst initValStr = ident.endsWith(\"$\") ? '\"\"' : '0';\n\t\t\t\tresults.push(`${ident} = ${initValStr}`);\n\t\t\t}\n\n\t\t\treturn results.join(\"; \");\n\t\t},\n\n\t\tExp(_expLit: Node, _open: Node, e: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\treturn `Math.exp(${e.eval()})`;\n\t\t},\n\n\t\tFix(_fixLit: Node, _open: Node, e: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\treturn `Math.trunc(${e.eval()})`;\n\t\t},\n\n\t\tForLoop(_forLit: Node, variable: Node, _eqSign: Node, start: Node, _dirLit: Node, end: Node, _stepLit: Node, step: Node) {\n\t\t\tconst varExp = variable.eval();\n\t\t\tconst startExp = start.eval();\n\t\t\tconst endExp = end.eval();\n\t\t\tconst stepExp = step.child(0)?.eval() || \"1\";\n\n\t\t\tconst stepAsNum = Number(stepExp);\n\n\t\t\tlet cmpSt = \"\";\n\t\t\tif (isNaN(stepAsNum)) {\n\t\t\t\tcmpSt = `${stepExp} >= 0 ? ${varExp} <= ${endExp} : ${varExp} >= ${endExp}`\n\t\t\t} else {\n\t\t\t\tcmpSt = stepExp >= 0 ? `${varExp} <= ${endExp}` : `${varExp} >= ${endExp}`;\n\t\t\t}\n\n\t\t\tsemanticsHelper.nextIndentAdd(2);\n\t\t\tconst result = `for (${varExp} = ${startExp}; ${cmpSt}; ${varExp} += ${stepExp}) {`;\n\n\t\t\treturn result;\n\t\t},\n\n\t\tFrame(_frameLit: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\tsemanticsHelper.addInstr(\"_frame\");\n\t\t\treturn `await _frame()`;\n\t\t},\n\n\t\tGosub(_gosubLit: Node, e: Node) {\n\t\t\tconst labelStr = e.sourceString;\n\t\t\tsemanticsHelper.addGosubLabel(labelStr);\n\n\t\t\treturn `_${labelStr}()`;\n\t\t},\n\n\t\tHex(_hexLit: Node, _open: Node, e: Node, _comma: Node, n: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\tconst pad = n.child(0)?.eval();\n\t\t\tconst padStr = pad !== undefined ? `.padStart(${pad} || 0, \"0\")` : '';\n\t\t\treturn `(${e.eval()}).toString(16).toUpperCase()${padStr}`;\n\t\t},\n\n\t\tInput(_inputLit: Node, message: Node, _semi: Node, e: Node) {\n\t\t\tsemanticsHelper.addInstr(\"_input\");\n\n\t\t\tconst msgStr = message.sourceString.replace(/\\s*[;,]$/, \"\");\n\t\t\tconst ident = e.eval();\n\t\t\tconst isNumStr = ident.includes(\"$\") ? \"\" : \", true\";\n\n\t\t\treturn `${ident} = await _input(${msgStr}${isNumStr})`;\n\t\t},\n\n\t\tInstr(_instrLit: Node, _open: Node, e1: Node, _comma: Node, e2: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\treturn `((${e1.eval()}).indexOf(${e2.eval()}) + 1)`;\n\t\t},\n\n\t\tInt(_intLit: Node, _open: Node, e: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\treturn `Math.floor(${e.eval()})`;\n\t\t},\n\n\t\tLeft(_leftLit: Node, _open: Node, e1: Node, _comma: Node, e2: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\treturn `(${e1.eval()}).slice(0, ${e2.eval()})`;\n\t\t},\n\n\t\tLen(_lenLit: Node, _open: Node, e: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\treturn `(${e.eval()}).length`;\n\t\t},\n\n\t\tLog(_logLit: Node, _open: Node, e: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\treturn `Math.log(${e.eval()})`;\n\t\t},\n\n\t\tLog10(_log10Lit: Node, _open: Node, e: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\treturn `Math.log10(${e.eval()})`;\n\t\t},\n\n\t\tLower(_lowerLit: Node, _open: Node, e: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\treturn `(${e.eval()}).toLowerCase()`;\n\t\t},\n\n\t\tMax(_maxLit: Node, _open: Node, args: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\tconst argList = args.asIteration().children.map(c => c.eval()); // see also: ArrayArgs\n\t\t\treturn `Math.max(${argList})`;\n\t\t},\n\n\t\tMid(_midLit: Node, _open: Node, e1: Node, _comma1: Node, e2: Node, _comma2: Node, e3: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\tconst length = e3.child(0)?.eval();\n\t\t\tconst lengthStr = length === undefined ? \"\" : `, ${length}`;\n\t\t\treturn `(${e1.eval()}).substr(${e2.eval()} - 1${lengthStr})`;\n\t\t},\n\n\t\tMin(_minLit: Node, _open: Node, args: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\tconst argList = args.asIteration().children.map(c => c.eval()); // see also: ArrayArgs\n\t\t\treturn `Math.min(${argList})`;\n\t\t},\n\n\t\tNext(_nextLit: Node, variables: Node) {\n\t\t\tconst argList = variables.asIteration().children.map(c => c.eval());\n\t\t\tif (!argList.length) {\n\t\t\t\targList.push(\"_any\");\n\t\t\t}\n\t\t\tsemanticsHelper.addIndent(-2 * argList.length);\n\t\t\treturn '} '.repeat(argList.length).slice(0, -1);\n\t\t},\n\n\t\tOn(_nLit: Node, e1: Node, _gosubLit: Node, args: Node) {\n\t\t\tconst index = e1.eval();\n\t\t\tconst argList = args.asIteration().children.map(c => c.sourceString);\n\n\t\t\tfor (let i = 0; i < argList.length; i += 1) {\n\t\t\t\tsemanticsHelper.addGosubLabel(argList[i]);\n\t\t\t}\n\n\t\t\treturn `[${argList.map((label) => `_${label}`).join(\",\")}]?.[${index} - 1]()`; // 1-based index\n\t\t},\n\n\t\tPi(_piLit: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\treturn \"Math.PI\";\n\t\t},\n\n\t\tPrintArgs(arg: Node, _printSep: Node, args: Node) {\n\t\t\treturn [arg.eval(), ...evalChildren(args.children)].join(', ');\n\t\t},\n\t\tPrint(_printLit: Node, params: Node, semi: Node) {\n\t\t\tconst paramStr = params.child(0)?.eval() || \"\";\n\n\t\t\tlet newlineStr = \"\";\n\t\t\tif (!semi.sourceString) {\n\t\t\t\tnewlineStr = paramStr ? `, \"\\\\n\"` : `\"\\\\n\"`;\n\t\t\t}\n\t\t\treturn `_o.print(${paramStr}${newlineStr})`;\n\t\t},\n\n\t\tRead(_readlit: Node, args: Node) {\n\t\t\tsemanticsHelper.addInstr(\"_read\");\n\t\t\tconst argList = args.asIteration().children.map(c => c.eval());\n\t\t\tconst results: string[] = [];\n\t\t\tfor (const ident of argList) {\n\t\t\t\tresults.push(`${ident} = _read()`);\n\t\t\t}\n\t\t\treturn results.join(\"; \");\n\t\t},\n\n\t\tRem(_remLit: Node, remain: Node) {\n\t\t\treturn `// ${remain.sourceString}`;\n\t\t},\n\n\t\tRestore(_restoreLit: Node, e: Node) {\n\t\t\tconst labelStr = e.sourceString || \"0\";\n\t\t\tsemanticsHelper.addRestoreLabel(labelStr);\n\n\t\t\tsemanticsHelper.addInstr(\"_restore\");\n\t\t\treturn `_restore(${labelStr})`;\n\t\t},\n\n\t\tReturn(_returnLit: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\treturn \"return\";\n\t\t},\n\n\t\tRight(_rightLit: Node, _open: Node, e1: Node, _comma: Node, e2: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\treturn `(${e1.eval()}).slice(-${e2.eval()})`;\n\t\t},\n\n\t\tRnd(_rndLit: Node, _open: Node, _e: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\t// args are ignored\n\t\t\treturn `Math.random()`;\n\t\t},\n\n\t\tRound(_roundLit: Node, _open: Node, e: Node, _comma: Node, e2: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\tconst dec = e2.child(0)?.eval();\n\t\t\tif (dec) {\n\t\t\t\t//return `(Math.round(${e.eval()} * Math.pow(10, ${dec})) / Math.pow(10, ${dec}))`;\n\t\t\t\tsemanticsHelper.addInstr(\"_round\");\n\t\t\t\treturn `_round(${e.eval()}, ${dec})`;\n\t\t\t}\n\t\t\treturn `Math.round(${e.eval()})`; // common round without decimals places\n\t\t\t// A better way to avoid rounding errors: https://www.jacklmoore.com/notes/rounding-in-javascript\n\t\t},\n\n\t\tSgn(_sgnLit: Node, _open: Node, e: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\treturn `Math.sign(${e.eval()})`;\n\t\t},\n\n\t\tSin(_sinLit: Node, _open: Node, e: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\treturn `Math.sin(${e.eval()})`;\n\t\t},\n\n\t\tSpace2(_stringLit: Node, _open: Node, len: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\treturn `\" \".repeat(${len.eval()})`;\n\t\t},\n\n\t\tSqr(_sqrLit: Node, _open: Node, e: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\treturn `Math.sqrt(${e.eval()})`;\n\t\t},\n\n\t\tStop(_stopLit: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\treturn `return \"stop\"`;\n\t\t},\n\n\t\tStr(_strLit: Node, _open: Node, e: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\tconst arg = e.eval();\n\n\t\t\tlet argStr: string;\n\t\t\tif (isNaN(Number(arg))) {\n\t\t\t\targStr = `(((${arg}) >= 0) ? \" \" : \"\") + String(${arg})`;\n\t\t\t} else { // simplify if we know at compile time that arg is a positive number\n\t\t\t\targStr = arg >= 0 ? `\" \" + String(${arg})` : `String(${arg})`;\n\t\t\t}\n\t\t\treturn argStr;\n\t\t},\n\n\t\tString2(_stringLit: Node, _open: Node, len: Node, _commaLit: Node, chr: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\t// Note: String$: we only support second parameter as string; we do not use charAt(0) to get just one char\n\t\t\treturn `(${chr.eval()}).repeat(${len.eval()})`;\n\t\t},\n\n\t\tTan(_tanLit: Node, _open: Node, e: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\treturn `Math.tan(${e.eval()})`;\n\t\t},\n\n\t\tTime(_timeLit: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\tsemanticsHelper.addInstr(\"_time\");\n\t\t\treturn `_time()`;\n\t\t},\n\n\t\tUpper(_upperLit: Node, _open: Node, e: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\treturn `(${e.eval()}).toUpperCase()`;\n\t\t},\n\n\t\tVal(_upperLit: Node, _open: Node, e: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\tconst numPattern = /^\"[\\\\+\\\\-]?\\d*\\.?\\d+(?:[Ee][\\\\+\\\\-]?\\d+)?\"$/;\n\t\t\tconst numStr = String(e.eval());\n\n\t\t\tif (numPattern.test(numStr)) {\n\t\t\t\treturn `Number(${numStr})`; // for non-hex/bin number strings we can use this simple version\n\t\t\t}\n\t\t\treturn `Number((${numStr}).replace(\"&x\", \"0b\").replace(\"&\", \"0x\"))`;\n\t\t},\n\n\t\tWend(_wendLit: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\tsemanticsHelper.addIndent(-2);\n\t\t\treturn '}';\n\t\t},\n\n\t\tWhileLoop(_whileLit: Node, e: Node) {\n\t\t\tconst cond = e.eval();\n\t\t\tsemanticsHelper.nextIndentAdd(2);\n\t\t\treturn `while (${cond}) {`;\n\t\t},\n\n\t\tStrOrNumExp(e: Node) {\n\t\t\treturn String(e.eval());\n\t\t},\n\n\t\tXorExp_xor(a: Node, _op: Node, b: Node) {\n\t\t\treturn `${a.eval()} ^ ${b.eval()}`;\n\t\t},\n\n\t\tOrExp_or(a: Node, _op: Node, b: Node) {\n\t\t\treturn `${a.eval()} | ${b.eval()}`;\n\t\t},\n\n\t\tAndExp_and(a: Node, _op: Node, b: Node) {\n\t\t\treturn `${a.eval()} & ${b.eval()}`;\n\t\t},\n\n\t\tNotExp_not(_op: Node, e: Node) {\n\t\t\treturn `~(${e.eval()})`;\n\t\t},\n\n\t\tCmpExp_eq(a: Node, _op: Node, b: Node) {\n\t\t\treturn `${a.eval()} === ${b.eval()} ? -1 : 0`;\n\t\t},\n\t\tCmpExp_ne(a: Node, _op: Node, b: Node) {\n\t\t\treturn `${a.eval()} !== ${b.eval()} ? -1 : 0`;\n\t\t},\n\t\tCmpExp_lt(a: Node, _op: Node, b: Node) {\n\t\t\treturn `${a.eval()} < ${b.eval()} ? -1 : 0`;\n\t\t},\n\t\tCmpExp_le(a: Node, _op: Node, b: Node) {\n\t\t\treturn `${a.eval()} <= ${b.eval()} ? -1 : 0`;\n\t\t},\n\t\tCmpExp_gt(a: Node, _op: Node, b: Node) {\n\t\t\treturn `${a.eval()} > ${b.eval()} ? -1 : 0`;\n\t\t},\n\t\tCmpExp_ge(a: Node, _op: Node, b: Node) {\n\t\t\treturn `${a.eval()} >= ${b.eval()} ? -1 : 0`;\n\t\t},\n\n\t\tAddExp_plus(a: Node, _op: Node, b: Node) {\n\t\t\treturn `${a.eval()} + ${b.eval()}`;\n\t\t},\n\t\tAddExp_minus(a: Node, _op: Node, b: Node) {\n\t\t\treturn `${a.eval()} - ${b.eval()}`;\n\t\t},\n\n\t\tModExp_mod(a: Node, _op: Node, b: Node) {\n\t\t\treturn `${a.eval()} % ${b.eval()}`;\n\t\t},\n\n\t\tDivExp_div(a: Node, _op: Node, b: Node) {\n\t\t\treturn `((${a.eval()} / ${b.eval()}) | 0)`;\n\t\t},\n\n\t\tMulExp_times(a: Node, _op: Node, b: Node) {\n\t\t\treturn `${a.eval()} * ${b.eval()}`;\n\t\t},\n\t\tMulExp_divide(a: Node, _op: Node, b: Node) {\n\t\t\treturn `${a.eval()} / ${b.eval()}`;\n\t\t},\n\n\t\tExpExp_power(a: Node, _: Node, b: Node) {\n\t\t\treturn `Math.pow(${a.eval()}, ${b.eval()})`;\n\t\t},\n\n\t\tPriExp_paren(_open: Node, e: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\treturn `(${e.eval()})`;\n\t\t},\n\t\tPriExp_pos(_op: Node, e: Node) {\n\t\t\treturn String(e.eval());\n\t\t},\n\t\tPriExp_neg(_op: Node, e: Node) {\n\t\t\treturn `-${e.eval()}`;\n\t\t},\n\n\t\tStrCmpExp_eq(a: Node, _op: Node, b: Node) {\n\t\t\treturn `${a.eval()} === ${b.eval()} ? -1 : 0`;\n\t\t},\n\t\tStrCmpExp_ne(a: Node, _op: Node, b: Node) {\n\t\t\treturn `${a.eval()} !== ${b.eval()} ? -1 : 0`;\n\t\t},\n\n\t\tStrAddExp_plus(a: Node, _op: Node, b: Node) {\n\t\t\treturn `${a.eval()} + ${b.eval()}`;\n\t\t},\n\n\t\tStrPriExp_paren(_open: Node, e: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\treturn `(${e.eval()})`;\n\t\t},\n\n\t\tArrayArgs(args: Node) {\n\t\t\treturn args.asIteration().children.map(c => String(c.eval()));\n\t\t},\n\n\t\tArrayIdent(ident: Node, _open: Node, e: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\treturn `${ident.eval()}[${e.eval().join(\"][\")}]`;\n\t\t},\n\n\t\tStrArrayIdent(ident: Node, _open: Node, e: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\treturn `${ident.eval()}[${e.eval().join(\"][\")}]`;\n\t\t},\n\n\t\tDimArrayIdent(ident: Node, _open: Node, indices: Node, _close: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\treturn [ident.eval(), ...indices.eval()]; //TTT\n\t\t},\n\n\t\tdecimalValue(value: Node) {\n\t\t\treturn value.sourceString;\n\t\t},\n\n\t\thexValue(_prefix: Node, value: Node) {\n\t\t\treturn `0x${value.sourceString}`;\n\t\t},\n\n\t\tbinaryValue(_prefix: Node, value: Node) {\n\t\t\treturn `0b${value.sourceString}`;\n\t\t},\n\n\t\tstring(_quote1: Node, e: Node, _quote2: Node) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\treturn `\"${e.sourceString}\"`;\n\t\t},\n\n\t\tident(ident: Node) {\n\t\t\tconst name = ident.sourceString;\n\t\t\treturn semanticsHelper.getVariable(name);\n\t\t},\n\n\t\tstrIdent(ident: Node, typeSuffix: Node) {\n\t\t\tconst name = ident.sourceString + typeSuffix.sourceString;\n\t\t\treturn semanticsHelper.getVariable(name);\n\t\t}\n\t};\n\treturn semantics;\n}\n\n\nexport class Semantics {\n\tprivate lineIndex = 0;\n\n\tprivate indent = 0;\n\tprivate indentAdd = 0;\n\n\tprivate readonly variables: Record<string, number> = {};\n\n\tprivate readonly definedLabels: DefinedLabelEntryType[] = [];\n\tprivate readonly gosubLabels: Record<string, GosubLabelEntryType> = {};\n\n\tprivate readonly dataList: (string | number)[] = [];\n\tprivate dataIndex = 0;\n\tprivate readonly restoreMap: Record<string, number> = {};\n\n\tprivate static readonly reJsKeyword = /^(arguments|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|eval|export|extends|false|finally|for|function|if|implements|import|in|instanceof|interface|let|new|null|package|private|protected|public|return|static|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)$/;\n\n\tprivate readonly instrMap: Record<string, number> = {};\n\n\tprivate addIndent(num: number) {\n\t\tif (num < 0) {\n\t\t\tthis.applyNextIndent();\n\t\t}\n\t\tthis.indent += num;\n\t\treturn this.indent;\n\t}\n\n\tprivate setIndent(indent: number) {\n\t\tthis.indent = indent;\n\t}\n\n\tprivate getIndent() {\n\t\treturn this.indent;\n\t}\n\n\tprivate getIndentStr() {\n\t\tif (this.indent < 0) {\n\t\t\tconsole.error(\"getIndentStr: lineIndex=\", this.lineIndex, \", indent=\", this.indent);\n\t\t\treturn \"\";\n\t\t}\n\t\treturn \" \".repeat(this.indent);\n\t}\n\n\tprivate applyNextIndent() {\n\t\tthis.indent += this.indentAdd;\n\t\tthis.indentAdd = 0;\n\t}\n\n\tprivate nextIndentAdd(num: number) {\n\t\tthis.indentAdd += num;\n\t}\n\n\tprivate addDataIndex(count: number) {\n\t\treturn this.dataIndex += count;\n\t}\n\n\tprivate getDataIndex() {\n\t\treturn this.dataIndex;\n\t}\n\n\tprivate addDefinedLabel(label: string, line: number) {\n\t\tthis.definedLabels.push({\n\t\t\tlabel,\n\t\t\tfirst: line,\n\t\t\tlast: -1,\n\t\t\tdataIndex: -1\n\t\t});\n\t}\n\n\tprivate getDefinedLabels() {\n\t\treturn this.definedLabels;\n\t}\n\n\tprivate addGosubLabel(label: string) {\n\t\tthis.gosubLabels[label] = this.gosubLabels[label] || {\n\t\t\tcount: 0\n\t\t};\n\t\tthis.gosubLabels[label].count = (this.gosubLabels[label].count || 0) + 1;\n\t}\n\n\tprivate getGosubLabels() {\n\t\treturn this.gosubLabels;\n\t}\n\n\tprivate getInstrKeys() {\n\t\treturn Object.keys(this.instrMap);\n\t}\n\n\tprivate addInstr(name: string) {\n\t\tthis.instrMap[name] = (this.instrMap[name] || 0) + 1;\n\t\treturn this.instrMap[name];\n\t}\n\n\tprivate getVariables() {\n\t\treturn Object.keys(this.variables);\n\t}\n\n\tprivate getVariable(name: string) {\n\t\tname = name.toLowerCase();\n\t\tif (Semantics.reJsKeyword.test(name)) {\n\t\t\tname = `_${name}`;\n\t\t}\n\n\t\tthis.variables[name] = (this.variables[name] || 0) + 1;\n\t\treturn name;\n\t}\n\n\tprivate static deleteAllItems(items: Record<string, any>) {\n\t\tfor (const name in items) { // eslint-disable-line guard-for-in\n\t\t\tdelete items[name];\n\t\t}\n\t}\n\n\tprivate incrementLineIndex() {\n\t\tthis.lineIndex += 1;\n\t\treturn this.lineIndex;\n\t}\n\n\tprivate getRestoreMap() {\n\t\treturn this.restoreMap;\n\t}\n\n\tprivate addRestoreLabel(label: string) {\n\t\tthis.restoreMap[label] = -1;\n\t}\n\n\tprivate getDataList() {\n\t\treturn this.dataList;\n\t}\n\n\tpublic resetParser() {\n\t\tthis.lineIndex = 0;\n\t\tthis.indent = 0;\n\t\tthis.indentAdd = 0;\n\t\tSemantics.deleteAllItems(this.variables);\n\t\tthis.definedLabels.length = 0;\n\t\tSemantics.deleteAllItems(this.gosubLabels);\n\t\tthis.dataList.length = 0;\n\t\tthis.dataIndex = 0;\n\t\tSemantics.deleteAllItems(this.restoreMap);\n\t\tSemantics.deleteAllItems(this.instrMap);\n\t}\n\n\tpublic getSemantics() {\n\t\tconst semanticsHelper: SemanticsHelper = {\n\t\t\taddDataIndex: (count: number) => this.addDataIndex(count),\n\t\t\taddDefinedLabel: (label: string, line: number) => this.addDefinedLabel(label, line),\n\t\t\taddGosubLabel: (label: string) => this.addGosubLabel(label),\n\t\t\taddIndent: (num: number) => this.addIndent(num),\n\t\t\taddInstr: (name: string) => this.addInstr(name),\n\t\t\taddRestoreLabel: (label: string) => this.addRestoreLabel(label),\n\t\t\tapplyNextIndent: () => this.applyNextIndent(),\n\t\t\tgetDataIndex: () => this.getDataIndex(),\n\t\t\tgetDataList: () => this.getDataList(),\n\t\t\tgetDefinedLabels: () => this.getDefinedLabels(),\n\t\t\tgetGosubLabels: () => this.getGosubLabels(),\n\t\t\tgetIndent: () => this.getIndent(),\n\t\t\tgetIndentStr: () => this.getIndentStr(),\n\t\t\t//getInstr: (name: string) => this.getInstr(name),\n\t\t\tgetInstrKeys: () => this.getInstrKeys(),\n\t\t\tgetRestoreMap: () => this.getRestoreMap(),\n\t\t\tgetVariable: (name: string) => this.getVariable(name),\n\t\t\tgetVariables: () => this.getVariables(),\n\t\t\tincrementLineIndex: () => this.incrementLineIndex(),\n\t\t\tnextIndentAdd: (num: number) => this.nextIndentAdd(num),\n\t\t\tsetIndent: (indent: number) => this.setIndent(indent)\n\t\t};\n\t\treturn getSemantics(semanticsHelper);\n\t}\n}\n","// core.ts\n\nimport type { ICore, ConfigType } from \"./Interfaces\";\nimport { Parser } from \"./Parser\";\nimport { arithmetic } from \"./arithmetic\";\nimport { Semantics } from \"./Semantics\";\n\nconst vm = {\n\t_output: \"\",\n\t_fnOnCls: (() => undefined) as () => void,\n\tcls: () => {\n\t\tvm._output = \"\";\n\t\tvm._fnOnCls();\n\t},\n\t_convertPrintArg: (arg: string | number) => typeof arg !== \"number\" ? arg : arg >= 0 ? ` ${arg} ` : `${arg} `, // pad numbers with spaces\n\tprint: (...args: (string | number)[]) => vm._output += args.map((arg) => vm._convertPrintArg(arg)).join(''),\n\n\tgetOutput: () => vm._output,\n\tsetOutput: (str: string) => vm._output = str,\n\tsetOnCls: (fn: () => void) => vm._fnOnCls = fn\n};\n\n\nexport class Core implements ICore {\n\tprivate readonly startConfig: ConfigType = {\n\t\tdebug: 0,\n\t\texample: \"\",\n\t\tfileName: \"\",\n\t\tinput: \"\",\n\t\tdebounceCompile: 800,\n\t\tdebounceExecute: 400\n\t};\n\n\tprivate readonly semantics = new Semantics();\n\n\tprivate readonly examples: Record<string, string> = {};\n\n\tprivate vm = vm;\n\n\tprivate onCheckSyntax = async (_s: string) => \"\"; // eslint-disable-line @typescript-eslint/no-unused-vars\n\n\tpublic getConfigObject() {\n\t\treturn this.startConfig;\n\t}\n\n\tpublic getConfig(name: string) {\n\t\treturn this.startConfig[name];\n\t}\n\n\tpublic getExampleObject() {\n\t\treturn this.examples;\n\t}\n\n\tpublic setExample(name: string, script: string) {\n\t\tthis.examples[name] = script;\n\t}\n\n\tpublic getExample(name: string) {\n\t\treturn this.examples[name];\n\t}\n\n\tpublic setOnCls(fn: () => void) {\n\t\tvm.setOnCls(fn);\n\t}\n\n\tsetOnCheckSyntax(fn: (s: string) => Promise<string>) {\n\t\tthis.onCheckSyntax = fn;\n\t}\n\n\tprivate arithmeticParser: Parser | undefined;\n\n\tpublic compileScript(script: string) {\n\t\tif (!this.arithmeticParser) {\n\t\t\tthis.arithmeticParser = new Parser(arithmetic.grammar, this.semantics.getSemantics());\n\t\t}\n\t\tthis.semantics.resetParser();\n\n\t\tconst compiledScript = this.arithmeticParser.parseAndEval(script);\n\t\treturn compiledScript;\n\t}\n\n\tasync executeScript(compiledScript: string) {\n\t\tthis.vm.setOutput(\"\");\n\n\t\tif (compiledScript.startsWith(\"ERROR\")) {\n\t\t\treturn \"ERROR\";\n\t\t}\n\n\t\tlet output: string;\n\t\toutput = await this.onCheckSyntax(compiledScript);\n\t\tif (output) {\n\t\t\tvm.cls();\n\t\t\treturn \"ERROR: \" + output;\n\t\t}\n\n\t\ttry {\n\t\t\tconst fnScript = new Function(\"_o\", compiledScript);\n\t\t\tconst result = fnScript(this.vm) || \"\";\n\t\t\tif (result instanceof Promise) {\n\t\t\t\toutput = await result;\n\t\t\t\toutput = this.vm.getOutput() + output;\n\t\t\t} else {\n\t\t\t\toutput = this.vm.getOutput() + result;\n\t\t\t}\n\n\t\t} catch (error) {\n\t\t\tvm.cls();\n\t\t\toutput = \"ERROR: \";\n\t\t\tif (error instanceof Error) {\n\t\t\t\toutput += String(error);\n\n\t\t\t\tconst anyErr = error as any;\n\t\t\t\tconst lineNumber = anyErr.lineNumber; // only on FireFox\n\t\t\t\tconst columnNumber = anyErr.columnNumber; // only on FireFox\n\n\t\t\t\tif (lineNumber || columnNumber) {\n\t\t\t\t\tconst errLine = lineNumber - 2; // lineNumber -2 because of anonymous function added by new Function() constructor\n\t\t\t\t\toutput += ` (Line ${errLine}, column ${columnNumber})`;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput += \"unknown\";\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n}\n","// Ui.ts\n\nimport { ICore, IUi, ConfigType } from \"./Interfaces\";\n\n// Worker:\ntype PlainErrorEventType = {\n\tlineno: number,\n\tcolno: number,\n\tmessage: string\n};\n\ntype ProcessingQueueType = {\n\tresolve: (value: PlainErrorEventType) => void,\n\tjsText: string\n};\n\n// based on: https://stackoverflow.com/questions/35252731/find-details-of-syntaxerror-thrown-by-javascript-new-function-constructor\n// https://stackoverflow.com/a/55555357\nconst workerFn = () => {\n\tconst doEvalAndReply = (jsText: string) => {\n\t\tself.addEventListener(\n\t\t\t'error',\n\t\t\t(errorEvent) => {\n\t\t\t\t// Don't pollute the browser console:\n\t\t\t\terrorEvent.preventDefault();\n\t\t\t\t// The properties we want are actually getters on the prototype;\n\t\t\t\t// they won't be retrieved when just stringifying so, extract them manually, and put them into a new object:\n\t\t\t\tconst { lineno, colno, message } = errorEvent;\n\t\t\t\tconst plainErrorEventObj: PlainErrorEventType = { lineno, colno, message };\n\t\t\t\tself.postMessage(JSON.stringify(plainErrorEventObj));\n\t\t\t},\n\t\t\t{ once: true }\n\t\t);\n\t\t/* const fn = */ new Function(\"_o\", jsText);\n\t\tconst plainErrorEventObj: PlainErrorEventType = {\n\t\t\tlineno: -1,\n\t\t\tcolno: -1,\n\t\t\tmessage: 'No Error: Parsing successful!'\n\t\t};\n\t\tself.postMessage(JSON.stringify(plainErrorEventObj));\n\t};\n\tself.addEventListener('message', (e) => {\n\t\tdoEvalAndReply(e.data);\n\t});\n};\n\n\nexport class Ui implements IUi {\n\tprivate readonly core: ICore;\n\tprivate basicCm: any;\n\tprivate compiledCm: any;\n\t//private static worker?: Worker;\n\tprivate static getErrorEvent?: (s: string) => Promise<PlainErrorEventType>;\n\n\tconstructor(core: ICore) {\n\t\tthis.core = core;\n\t}\n\n\tprivate debounce<T extends (...args: any[]) => void>(func: T, delayPara: string): (...args: any[]) => void {\n\t\tlet timeoutId: ReturnType<typeof setTimeout>;\n\t\tconst core = this.core;\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tconst context = this;\n\t\t\tconst delay = core.getConfig(delayPara) as number;\n\t\t\tclearTimeout(timeoutId);\n\t\t\ttimeoutId = setTimeout(() => {\n\t\t\t\tfunc.apply(context, args);\n\t\t\t}, delay);\n\t\t};\n\t}\n\n\tprivate static asyncDelay(fn: () => void, timeout: number) {\n\t\treturn (async () => {\n\t\t\tconst timerId = setTimeout(fn, timeout);\n\t\t\treturn timerId;\n\t\t})();\n\t}\n\n\n\tprivate getOutputText() {\n\t\tconst outputText = document.getElementById(\"outputText\") as HTMLTextAreaElement;\n\t\treturn outputText.value;\n\t}\n\n\tpublic setOutputText(value: string) {\n\t\tconst outputText = document.getElementById(\"outputText\") as HTMLTextAreaElement;\n\t\toutputText.value = value;\n\t}\n\n\tprivate async onExecuteButtonClick(_event: Event) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\tconst compiledText = document.getElementById(\"compiledText\") as HTMLTextAreaElement;\n\n\t\tconst compiledScript = this.compiledCm ? this.compiledCm.getValue() as string : compiledText.value;\n\n\t\tconst output = await this.core.executeScript(compiledScript);\n\n\t\tthis.setOutputText(this.getOutputText() + output + (output.endsWith(\"\\n\") ? \"\" : \"\\n\"));\n\t}\n\n\tprivate onCompiledTextChange(_event: Event) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\tconst autoExecuteInput = document.getElementById(\"autoExecuteInput\") as HTMLInputElement;\n\t\tif (autoExecuteInput.checked) {\n\t\t\tconst executeButton = window.document.getElementById(\"executeButton\") as HTMLButtonElement;\n\t\t\texecuteButton.dispatchEvent(new Event('click'));\n\t\t}\n\t}\n\n\tprivate onCompileButtonClick(_event: Event) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\tconst basicText = document.getElementById(\"basicText\") as HTMLTextAreaElement;\n\t\tconst compiledText = document.getElementById(\"compiledText\") as HTMLTextAreaElement;\n\t\tconst input = this.compiledCm ? this.basicCm.getValue() : basicText.value;\n\t\tconst compiledScript = this.core.compileScript(input);\n\n\t\tif (this.compiledCm) {\n\t\t\tthis.compiledCm.setValue(compiledScript);\n\t\t} else {\n\t\t\tcompiledText.value = compiledScript;\n\t\t\tconst autoExecuteInput = document.getElementById(\"autoExecuteInput\") as HTMLInputElement;\n\t\t\tif (autoExecuteInput.checked) {\n\t\t\t\tconst newEvent = new Event('change');\n\t\t\t\tcompiledText.dispatchEvent(newEvent);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async onbasicTextChange(_event: Event) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\tconst autoCompileInput = document.getElementById(\"autoCompileInput\") as HTMLInputElement;\n\t\tif (autoCompileInput.checked) {\n\t\t\tconst compileButton = window.document.getElementById(\"compileButton\") as HTMLButtonElement;\n\t\t\tcompileButton.dispatchEvent(new Event('click'));\n\t\t}\n\t}\n\n\tprivate setExampleSelect(name: string) {\n\t\tconst exampleSelect = document.getElementById(\"exampleSelect\") as HTMLSelectElement;\n\t\texampleSelect.value = name;\n\t}\n\n\tprivate onExampleSelectChange(event: Event) {\n\t\tconst exampleSelect = event.target as HTMLSelectElement;\n\n\t\tconst basicText = document.getElementById(\"basicText\") as HTMLTextAreaElement;\n\t\tconst value = this.core.getExample(exampleSelect.value);\n\n\t\tthis.setOutputText(\"\");\n\n\t\tif (this.basicCm) {\n\t\t\tthis.basicCm.setValue(value);\n\t\t} else {\n\t\t\tbasicText.value = value;\n\t\t\tbasicText.dispatchEvent(new Event('change'));\n\t\t}\n\t}\n\n\tprivate setExampleSelectOptions(examples: Record<string, string>) {\n\t\tconst exampleSelect = document.getElementById(\"exampleSelect\") as HTMLSelectElement;\n\n\t\tfor (const key of Object.keys(examples)) {\n\t\t\tconst script = examples[key];\n\t\t\tconst firstLine = script.slice(0, script.indexOf(\"\\n\"));\n\n\t\t\tconst option = window.document.createElement(\"option\");\n\t\t\toption.value = key;\n\t\t\toption.text = key;\n\t\t\toption.title = firstLine;\n\t\t\toption.selected = false;\n\t\t\texampleSelect.add(option);\n\t\t}\n\t}\n\n\tprivate static getErrorEventFn() {\n\t\tif (Ui.getErrorEvent) {\n\t\t\treturn Ui.getErrorEvent;\n\t\t}\n\n\t\tconst blob = new Blob(\n\t\t\t[`(${workerFn})();`],\n\t\t\t{ type: \"text/javascript\" }\n\t\t);\n\n\t\tconst worker = new Worker(window.URL.createObjectURL(blob));\n\t\t// Use a queue to ensure processNext only calls the worker once the worker is idle\n\t\tconst processingQueue: ProcessingQueueType[] = [];\n\t\tlet processing = false;\n\n\t\tconst processNext = () => {\n\t\t\tprocessing = true;\n\t\t\tconst { resolve, jsText } = processingQueue.shift() as ProcessingQueueType;\n\t\t\tworker.addEventListener(\n\t\t\t\t'message',\n\t\t\t\t({ data }) => {\n\t\t\t\t\tresolve(JSON.parse(data));\n\t\t\t\t\tif (processingQueue.length) {\n\t\t\t\t\t\tprocessNext();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprocessing = false;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{ once: true }\n\t\t\t);\n\t\t\tworker.postMessage(jsText);\n\t\t};\n\n\t\tconst getErrorEvent = (jsText: string) => new Promise<PlainErrorEventType>((resolve) => {\n\t\t\tprocessingQueue.push({ resolve, jsText });\n\t\t\tif (!processing) {\n\t\t\t\tprocessNext();\n\t\t\t}\n\t\t});\n\n\t\tUi.getErrorEvent = getErrorEvent;\n\t\treturn getErrorEvent;\n\t}\n\n\tprivate static describeError(stringToEval: string, lineno: number, colno: number) {\n\t\tconst lines = stringToEval.split('\\n');\n\t\tconst line = lines[lineno - 1];\n\t\treturn `${line}\\n${' '.repeat(colno - 1) + '^'}`;\n\t}\n\n\tpublic async checkSyntax(str: string) {\n\t\tconst getErrorEvent = Ui.getErrorEventFn();\n\n\t\tlet output = \"\";\n\t\tconst { lineno, colno, message } = await getErrorEvent(str);\n\t\tif (message === 'No Error: Parsing successful!') {\n\t\t\treturn \"\";\n\t\t}\n\t\toutput += `Syntax error thrown at: Line ${lineno - 2}, col: ${colno}\\n`; // lineNo -2 because of anonymous function added by new Function() constructor\n\t\toutput += Ui.describeError(str, lineno - 2, colno);\n\t\treturn output;\n\t}\n\n\tprivate fnDecodeUri(s: string) {\n\t\tlet decoded = \"\";\n\n\t\ttry {\n\t\t\tdecoded = decodeURIComponent(s.replace(/\\+/g, \" \"));\n\t\t} catch (err) {\n\t\t\tif (err instanceof Error) {\n\t\t\t\terr.message += \": \" + s;\n\t\t\t}\n\t\t\tconsole.error(err);\n\t\t}\n\t\treturn decoded;\n\t}\n\n\t// https://stackoverflow.com/questions/901115/how-can-i-get-query-string-values-in-javascript\n\tpublic parseUri(urlQuery: string, config: ConfigType): string[] {\n\t\tconst rSearch = /([^&=]+)=?([^&]*)/g,\n\t\t\targs: string[] = [];\n\n\t\tlet match: RegExpExecArray | null;\n\n\t\twhile ((match = rSearch.exec(urlQuery)) !== null) {\n\t\t\tconst name = this.fnDecodeUri(match[1]),\n\t\t\t\tvalue = this.fnDecodeUri(match[2]);\n\n\t\t\tif (value !== null && config[name] !== undefined) {\n\t\t\t\targs.push(name + \"=\" + value);\n\t\t\t}\n\t\t}\n\t\treturn args;\n\t}\n\n\tpublic onWindowLoad(_event: Event) { // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\tconst basicText = window.document.getElementById(\"basicText\") as HTMLTextAreaElement;\n\t\tbasicText.addEventListener('change', (event) => this.onbasicTextChange(event));\n\n\t\tconst compiledText = window.document.getElementById(\"compiledText\") as HTMLTextAreaElement;\n\t\tcompiledText.addEventListener('change', (event) => this.onCompiledTextChange(event));\n\n\t\tconst compileButton = window.document.getElementById(\"compileButton\") as HTMLButtonElement;\n\t\tcompileButton.addEventListener('click', (event) => this.onCompileButtonClick(event), false);\n\n\t\tconst executeButton = window.document.getElementById(\"executeButton\") as HTMLButtonElement;\n\t\texecuteButton.addEventListener('click', (event) => this.onExecuteButtonClick(event), false);\n\n\t\tconst exampleSelect = window.document.getElementById(\"exampleSelect\") as HTMLSelectElement;\n\t\texampleSelect.addEventListener('change', (event) => this.onExampleSelectChange(event));\n\n\t\tconst WinCodeMirror = (window as any).CodeMirror;\n\t\tif (WinCodeMirror) {\n\t\t\tthis.basicCm = WinCodeMirror.fromTextArea(basicText, {\n\t\t\t\tlineNumbers: true,\n\t\t\t\tmode: 'javascript'\n\t\t\t});\n\t\t\tthis.basicCm.on('changes', this.debounce((event: Event) => this.onbasicTextChange(event), \"debounceCompile\"));\n\n\t\t\tthis.compiledCm = WinCodeMirror.fromTextArea(compiledText, {\n\t\t\t\tlineNumbers: true,\n\t\t\t\tmode: 'javascript'\n\t\t\t});\n\t\t\tthis.compiledCm.on('changes', this.debounce((event: Event) => this.onCompiledTextChange(event), \"debounceExecute\"));\n\t\t}\n\n\t\tUi.asyncDelay(() => {\n\t\t\tconst core = this.core;\n\t\t\tthis.setExampleSelectOptions(core.getExampleObject());\n\n\t\t\tconst example = this.core.getConfig(\"example\");\n\t\t\tif (example) {\n\t\t\t\tthis.setExampleSelect(example as string);\n\t\t\t}\n\t\t\texampleSelect.dispatchEvent(new Event('change'));\n\t\t}, 10);\n\t}\n\n}","// main.ts\n//\n// Usage:\n// node dist/locobasic.js input=\"?3 + 5 * (2 - 8)\"\n// node dist/locobasic.js fileName=dist/examples/example.bas\n// node dist/locobasic.js example=euler\n//\n// [ npx ts-node parser.ts input=\"?3 + 5 * (2 - 8)\" ]\n\nimport type { ConfigEntryType, ConfigType, ICore, IUi } from \"./Interfaces\";\nimport { Core } from \"./Core\";\nimport { Ui } from \"./Ui\";\n\nconst core: ICore = new Core();\n\nlet ui: IUi;\n\n\nfunction fnHereDoc(fn: () => void) {\n\treturn String(fn).\n\t\treplace(/^[^/]+\\/\\*\\S*/, \"\").\n\t\treplace(/\\*\\/[^/]+$/, \"\");\n}\n\nfunction addItem(key: string, input: string | (() => void)) {\n\tlet inputString = (typeof input !== \"string\") ? fnHereDoc(input) : input;\n\tinputString = inputString.replace(/^\\n/, \"\").replace(/\\n$/, \"\"); // remove preceding and trailing newlines\n\t// beware of data files ending with newlines! (do not use trimEnd)\n\n\tif (!key) { // maybe \"\"\n\t\tconst firstLine = inputString.slice(0, inputString.indexOf(\"\\n\"));\n\t\tconst matches = firstLine.match(/^\\s*\\d*\\s*(?:REM|rem|')\\s*(\\w+)/);\n\t\tkey = matches ? matches[1] : \"unknown\";\n\t}\n\n\tcore.setExample(key, inputString);\n}\n\n\ninterface NodeFs {\n\tpromises: {\n\t\treadFile(name: string, encoding: string): Promise<string>\n\t};\n}\n\nlet fs: NodeFs;\nlet modulePath: string;\n\ndeclare function require(name: string): NodeModule | NodeFs;\n\nasync function nodeReadFile(name: string): Promise<string> {\n\tif (!fs) {\n\t\tfs = require(\"fs\") as NodeFs;\n\t}\n\n\tif (!module) {\n\t\tmodule = require(\"module\") as NodeModule;\n\t\tmodulePath = module.path || \"\";\n\n\t\tif (!modulePath) {\n\t\t\tconsole.warn(\"nodeReadFile: Cannot determine module path\");\n\t\t}\n\t}\n\treturn fs.promises.readFile(name, \"utf8\");\n}\n\nfunction fnParseArgs(args: string[], config: ConfigType) {\n\tfor (let i = 0; i < args.length; i += 1) {\n\t\tconst [name, ...valueParts] = args[i].split(\"=\"),\n\t\t\tnameType = typeof config[name];\n\n\t\tlet value: ConfigEntryType = valueParts.join(\"=\");\n\t\tif (value !== undefined) {\n\t\t\tif (nameType === \"boolean\") {\n\t\t\t\tvalue = (value === \"true\");\n\t\t\t} else if (nameType === \"number\") {\n\t\t\t\tvalue = Number(value);\n\t\t\t}\n\t\t\tconfig[name] = value;\n\t\t}\n\t}\n\treturn config;\n}\n\nfunction keepRunning(fn: () => void, timeout: number) {\n\tconst timerId = setTimeout(() => { }, timeout);\n\treturn (async () => {\n\t\tfn();\n\t\tclearTimeout(timerId);\n\t})();\n}\n\nfunction start(input: string) {\n\tif (input !== \"\") {\n\t\tconst compiledScript = core.compileScript(input);\n\n\t\tconsole.log(\"INFO: Compiled:\\n\" + compiledScript + \"\\n---\");\n\n\t\treturn keepRunning(async () => {\n\t\t\tconst output = await core.executeScript(compiledScript);\n\t\t\tconsole.log(output.replace(/\\n$/, \"\"));\n\t\t}, 5000);\n\t} else {\n\t\tconsole.log(\"No input\");\n\t}\n}\n\nfunction main(config: ConfigType) {\n\tlet input = (config.input as string) || \"\";\n\n\tif (config.fileName) {\n\t\treturn keepRunning(async () => {\n\t\t\tinput = await nodeReadFile(config.fileName as string);\n\t\t\tstart(input);\n\t\t}, 5000);\n\t} else {\n\t\tif (config.example) {\n\t\t\tconst examples = core.getExampleObject();\n\t\t\tif (!Object.keys(examples).length) {\n\t\t\t\treturn keepRunning(async () => {\n\t\t\t\t\tconst jsFile = await nodeReadFile(\"./dist/examples/examples.js\");\n\t\t\t\t\t// ?? require('./examples/examples.js');\n\t\t\t\t\tconst fnScript = new Function(\"cpcBasic\", jsFile);\n\t\t\t\t\tfnScript({\n\t\t\t\t\t\taddItem: addItem\n\t\t\t\t\t});\n\n\t\t\t\t\tinput = examples[config.example as string];\n\t\t\t\t\tstart(input);\n\t\t\t\t}, 5000);\n\t\t\t}\n\t\t\tinput += examples[config.example as string];\n\t\t}\n\t\tconsole.log(\"start\");\n\t\tstart(input);\n\t}\n}\n\nconst config = core.getConfigObject();\n\nif (typeof window !== \"undefined\") {\n\t(window as any).cpcBasic = {\n\t\taddItem: addItem\n\t};\n\twindow.onload = () => {\n\t\tui = new Ui(core);\n\n\t\tconst args = ui.parseUri(window.location.search.substring(1), config);\n\t\tfnParseArgs(args, config);\n\n\t\tcore.setOnCls(() => ui.setOutputText(\"\"));\n\t\tcore.setOnCheckSyntax((s: string) => Promise.resolve(ui.checkSyntax(s)));\n\t\tui.onWindowLoad(new Event(\"onload\"));\n\t}\n\n} else {\n\tmain(fnParseArgs(global.process.argv.slice(2), config));\n}\n"],"names":["grammar"],"mappings":"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"}